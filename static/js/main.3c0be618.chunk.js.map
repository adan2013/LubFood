{"version":3,"sources":["firebase/firebase.js","firebase/authorizationProgressFlag.js","firebase/UserContext.js","lubfoodlogo.png","views/LoginPage.js","components/NavMenu.js","components/Layout.js","config.js","components/CardTitle.js","views/CategoryBrowser.js","firebase/firestore/recipes.js","components/DataLoader.js","views/RecipeBrowser.js","components/ModalWindow.js","firebase/firestore/shoppingList.js","components/IngredientList.js","views/RecipePreview.js","hooks/useTimer.js","components/CookingPopupPanel.js","views/Cooking.js","components/NumberPicker.js","views/RecipeEditor.js","components/RecipeIngredientPanel.js","firebase/firestore/ingredients.js","views/IngredientEditor.js","components/RecipeStepPanel.js","views/StepEditor.js","views/ShoppingList.js","views/Search.js","views/IngredientBrowser.js","firebase/firestore/databaseExports.js","views/ProfilePage.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","KEY_NAME","authorizationStart","window","localStorage","setItem","Date","toString","authorizationEnd","removeItem","UserContext","createContext","user","UserProvider","state","componentDidMount","auth","onAuthStateChanged","userAuth","firestore","collection","get","then","setState","catch","alert","Provider","value","this","props","children","Component","LoginForm","styled","div","LubFood","KeyIcon","FontAwesomeIcon","LoginButton","Button","ProgressLabel","AbortButton","signInWithGoogle","provider","GoogleAuthProvider","signInWithRedirect","err","LoginPage","authorized","useContext","authInProgress","getItem","to","src","logo","alt","variant","size","onClick","icon","faKey","NavContainer","NavItem","Link","items","faUtensils","name","path","faShoppingCart","faSearch","faCarrot","faUser","NavMenu","location","useLocation","map","item","className","pathname","indexOf","Container","Content","Layout","showMenu","href","includes","categories","code","ingredientUtils","label","min","max","step","Btn","onRight","SideButton","buttonObj","push","useHistory","link","defaultProps","CardTitle","leftButton","rightButton","ButtonGroup","CategoryButton","CategoryArrowIcon","CategoryBrowser","history","config","category","block","faChevronRight","RECIPES_COLL","STEPS_FIELD","INGREDIENTS_FIELD","getRecipe","recipeId","doc","exists","data","getAllRecipes","docs","forEach","recipe","id","getRecipeField","fieldName","updateRecipeField","update","updateSteps","stepArray","updateIngredients","ingredientArray","DataLoader","viewer","loader","refreshFlag","noPreventEmptyList","useState","setData","useEffect","resp","Array","isArray","length","RecipeButton","RecipeBrowser","useParams","faChevronLeft","faPlusCircle","find","c","categoryCode","sortData","where","sort","a","b","getRecipesFromCategory","ModalWindow","show","onCancel","onSubmit","title","text","Modal","onHide","Header","closeButton","Title","Body","Footer","SHOPPING_LIST_COLL","addToShoppingList","uid","obj","set","list","FieldValue","arrayUnion","merge","ListContainer","ItemContainer","lineThrough","ItemButton","MainOptionContainer","ManualAdder","InputGroup","convertObjects","i","unit","unitCode","getUnitName","ListItem","itemAdded","addOption","deleteOption","actionExecuted","setActionExecuted","currentUser","disabled","faCheck","arrayRemove","deleteFromShoppingList","faTrash","IngredientList","setList","itemsAdded","setItemsAdded","deleteModalIsOpen","setDeleteModalIsOpen","dataCopied","setDataCopied","customItem","setCustomItem","addAllOption","clearOption","exportOption","copy","join","setTimeout","faClipboard","manualAdder","Form","Control","type","onChange","e","target","placeholder","maxLength","Append","clearShoppingList","RecipeTitleContainer","TimerContainer","SingleTimerContainer","FooterButton","DifficultMeter","level","solidFaStar","regularFaStar","TimeDisplay","minutes","description","h","Math","floor","m","RecipePreview","steps","faPlayCircle","difficult","preparationTime","cookingTime","ingredients","delete","useTimer","onTimeOver","isRunning","startTime","initialTime","timeLeft","lastSetTimeValue","status","setStatus","intervalRef","useRef","current","stopService","getTime","clearInterval","undefined","play","setInterval","pause","resetTime","autoPause","setTime","newTime","autoStart","PopupMainContainer","hide","PopupContainer","CenterText","generateTimerString","s","CookingPopupPanel","popupMode","stepTimerValue","fontSize","onFontSizeChange","faPause","faPlay","faUndo","faMinus","faPlus","TextContainer","ControlButtonMainContainer","ControlButtonRowContainer","ControlButtonStyle","ControlButton","Cooking","ingredientMode","setIngredientMode","setPopupMode","setFontSize","stepNumber","setStepNumber","exitModalIsOpen","setExitModalIsOpen","switchStep","diff","v","switchPopup","popupId","idx","timer","faClock","faSearchPlus","faTimes","NumberPicker","minValue","maxValue","prefix","zeroCustomText","val","setVal","updateValue","newValue","round","Prepend","slice","reverse","style","textAlign","readOnly","SectionTitle","FooterMessage","RecipeEditor","setName","setDifficult","setPreparationTime","setCookingTime","currentData","downText","upText","marginTop","updateRecipe","add","res","addRecipe","highlight","CornerButton","DropdownSelector","select","IngredientSelector","dictionary","RecipeIngredientPanel","no","initialValues","onDelete","onUpdate","modified","setModified","ingredientId","setIngredientId","setValue","unitConfig","uc","getUnitConfig","getIngredient","INGREDIENTS_COLL","getIngredients","getIngredientsFromSystemAndRecipe","fromRecipe","getIngredientsFromRecipe","fromSystem","Promise","all","NewItemButton","cloneObject","JSON","parse","stringify","IngredientEditor","dataSetter","newList","splice","deleteItem","ingredient","updateItem","addNewItem","Textarea","textarea","TextareaCounter","RecipeStepPanel","stepCount","setText","setTimer","ShoppingList","getShoppingList","SearchGroup","SearchResultButton","ButtonArrowIcon","getCategoryName","SearchResultPanels","recipes","searchQuery","historyHook","toLowerCase","filteredRecipes","filter","Search","searchText","setSearchText","TrashIcon","IngredientAdder","dropdownIsOpen","setDropdownIsOpen","unitType","setUnitType","marginBottom","addIngredient","Dropdown","isOpen","toggle","Toggle","caret","Menu","Item","IngredientBrowser","selectedId","setSelectedId","setRefreshFlag","f","color","exportDataFromCollection","collectionName","docName","Panel","logout","signOut","exact","component","StepEditor","exportData","setExportData","fetchingInProgress","setFetchingInProgress","fileName","setFileName","fetchData","typeID","displayName","email","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","PrivateRoute","routes","route","render","App","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c0be618.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDRdHmJADtfgGpVkNCP55h1jbYkMUDY1GM\",\r\n    authDomain: \"lubfoodgh.firebaseapp.com\",\r\n    projectId: \"lubfoodgh\",\r\n    storageBucket: \"lubfoodgh.appspot.com\",\r\n    messagingSenderId: \"719043369683\",\r\n    appId: \"1:719043369683:web:6b35ccb6f9d50abebad226\"\r\n}\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase\r\n","const KEY_NAME = 'authenticatedWithFirebase'\r\n\r\nexport const authorizationIsInProgress = () => window.localStorage.getItem(KEY_NAME) !== null\r\n\r\nexport const authorizationStart = () => window.localStorage.setItem(KEY_NAME, new Date().toString())\r\n\r\nexport const authorizationEnd = () => window.localStorage.removeItem(KEY_NAME)\r\n","import React, { Component, createContext } from 'react'\r\nimport firebase from './firebase'\r\nimport PropTypes from 'prop-types'\r\nimport { authorizationStart, authorizationEnd } from './authorizationProgressFlag'\r\n\r\nexport const UserContext = createContext({ user: null })\r\n\r\nclass UserProvider extends Component {\r\n    state = {\r\n        user: null\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(userAuth => {\r\n            if(userAuth) {\r\n                firebase.firestore().collection('whitelist').get()\r\n                    .then(() => {\r\n                        authorizationStart()\r\n                        this.setState({ user: userAuth })\r\n                    })\r\n                    .catch(() => {\r\n                        authorizationEnd()\r\n                        alert('PERMISSION DENIED!')\r\n                        this.setState({ user: null })\r\n                    })\r\n            }else{\r\n                authorizationEnd()\r\n                this.setState({ user: null })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <UserContext.Provider value={this.state.user}>\r\n                {this.props.children}\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nUserProvider.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default UserProvider\r\n","export default __webpack_public_path__ + \"static/media/lubfoodlogo.00dc66c1.png\";","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faKey } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button } from 'react-bootstrap'\r\nimport firebase from 'firebase'\r\nimport {UserContext} from '../firebase/UserContext'\r\nimport {Redirect} from 'react-router'\r\nimport logo from '../lubfoodlogo.png'\r\nimport {authorizationIsInProgress, authorizationStart} from '../firebase/authorizationProgressFlag'\r\n\r\nconst LoginForm = styled.div`\r\nbackground-color: #393e46;\r\nwidth: 100vw;\r\nmax-width: 800px;\r\nheight: 100vh;\r\ntext-align: center;\r\npadding: 80px 50px 0 50px;\r\nbox-shadow: 0 0 30px 6px rgba(0,0,0,0.75);\r\n`\r\n\r\nconst LubFood = styled.div`\r\nmargin-bottom: 30px;\r\n  img {\r\n    max-width: 80%;\r\n  }\r\n`\r\n\r\nconst KeyIcon = styled(FontAwesomeIcon)`\r\nmargin-right: 14px;\r\n`\r\n\r\nconst LoginButton = styled(Button)`\r\npadding: 10px 20px;\r\n`\r\n\r\nconst ProgressLabel = styled.div`\r\ncolor: #fff;\r\nfont-size: 20px;\r\nanimation: pulse 0.5s infinite;\r\nanimation-direction: alternate;\r\n\r\n@keyframes pulse {\r\n0% { color: rgba(255, 255, 255, 1) }\r\n100% { color: rgba(255, 255, 255, 0.2) }\r\n}\r\n`\r\n\r\nconst AbortButton = styled(Button)`\r\npadding: 4px 20px;\r\nposition: fixed;\r\nbottom: 10px;\r\ntransform: translateX(-50%);\r\n`\r\n\r\nconst signInWithGoogle = () => {\r\n    authorizationStart()\r\n    const provider = new firebase.auth.GoogleAuthProvider()\r\n    firebase.auth().signInWithRedirect(provider)\r\n        .catch(err => alert(`AUTH ERROR: ${err}`))\r\n}\r\n\r\nconst LoginPage = () => {\r\n    const authorized = useContext(UserContext)\r\n    const authInProgress = authorizationIsInProgress()\r\n    if(authorized) {\r\n        return (<Redirect to={'/recipes'}/>)\r\n    }else{\r\n        return (\r\n            <LoginForm>\r\n                <LubFood><img src={logo} alt={'lubfood logo'}/></LubFood>\r\n                {\r\n                    authInProgress\r\n                    ?\r\n                        <>\r\n                            <ProgressLabel>Logowanie w toku...</ProgressLabel>\r\n                            <AbortButton variant={'danger'} size={'sm'} onClick={signInWithGoogle}>\r\n                                Spróbuj ponownie\r\n                            </AbortButton>\r\n                        </>\r\n                        :\r\n                        <LoginButton variant={'light'} onClick={signInWithGoogle}>\r\n                            <KeyIcon icon={faKey}/>Zaloguj do systemu\r\n                        </LoginButton>\r\n                }\r\n            </LoginForm>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUtensils, faShoppingCart, faSearch, faCarrot, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  position: fixed;\r\n  bottom: 0;\r\n  background-color: #2868ac;\r\n  height: 70px;\r\n  display: flex;\r\n  border-top: 1px #222020 solid;\r\n  z-index: 9999;\r\n`\r\n\r\nconst NavItem = styled(Link)`\r\nflex: 1;\r\ncolor: #fff;\r\npadding: 14px 2px 5px 2px;\r\ntext-decoration: none;\r\ntext-align: center;\r\nline-height: 20px;\r\nfont-size: 12px;\r\n\r\n&.active {\r\nbackground-color: #0c0c0c;\r\n}\r\n\r\n&:hover {\r\nbackground-color: #0c0c0c;\r\ntext-decoration: none;\r\ncolor: #fff;\r\n}\r\n\r\n.menu-icon {\r\nfont-size: 22px;\r\ndisplay: block;\r\nmargin: 0 auto 4px auto;\r\n}\r\n`\r\n\r\nconst items = [\r\n    { icon: faUtensils, name: 'Przepisy', path: '/recipes' },\r\n    { icon: faShoppingCart, name: 'Zakupy', path: '/shoping-list' },\r\n    { icon: faSearch, name: 'Szukaj', path: '/search' },\r\n    { icon: faCarrot, name: 'Składniki', path: '/ingredients' },\r\n    { icon: faUser, name: 'Profil', path: '/profile' }\r\n]\r\n\r\nconst NavMenu = () => {\r\n    const location = useLocation()\r\n    return (\r\n        <NavContainer>\r\n            {\r\n                items.map(item => (\r\n                    <NavItem key={item.name}\r\n                             to={item.path}\r\n                             className={location.pathname.indexOf(item.path) >= 0 && 'active'}>\r\n                        <FontAwesomeIcon className={'menu-icon'} icon={item.icon}/>\r\n                        {item.name}\r\n                    </NavItem>\r\n                ))\r\n            }\r\n        </NavContainer>\r\n    )\r\n}\r\n\r\nexport default NavMenu\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport NavMenu from './NavMenu'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = styled.div`\r\n  background-color: #3589e3;\r\n  width: 100%;\r\n  height: 100vh;\r\n`\r\n\r\nconst Content = styled.div`\r\n  background-color: #3589e3;\r\n  color: #fff;\r\n  min-height: 100%;\r\n  padding: 5px 5px 90px 5px;\r\n  box-shadow: 0 0 30px 6px rgba(0, 0, 0, 0.75);\r\n`\r\n\r\nconst Layout = (props) => {\r\n    const showMenu = !window.location.href.includes('/cooking')\r\n    return (\r\n        <Container>\r\n            <Content>{props.children}</Content>\r\n            {showMenu && <NavMenu/>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default Layout\r\n","export default {\r\n    categories: [\r\n        { code: 'cakes', name: 'Ciasta' },\r\n        { code: 'maindishes', name: 'Dania główne' },\r\n        { code: 'desserts', name: 'Desery' },\r\n        { code: 'drinks', name: 'Napoje' },\r\n        { code: 'snacks', name: 'Przekąski' },\r\n        { code: 'soups', name: 'Zupy' },\r\n    ],\r\n    ingredientUtils: [\r\n        { code: 'UNKNOW', name: 'Dowolna', label: '', min: 0, max: 0, step: null },\r\n        { code: 'QUANTITY', name: 'Sztuki', label: ' szt.', min: 0, max: 20, step: [0.25, 1] },\r\n        { code: 'ML', name: 'Mililitry', label: ' ml', min: 0, max: 3000, step: [10, 100] },\r\n        { code: 'GLASS', name: 'Szklanki', label: ' szklanki', min: 0, max: 10, step: [0.25, 1] },\r\n        { code: 'KG', name: 'Kilogramy', label: ' kg', min: 0, max: 10, step: [0.1, 0.5] },\r\n        { code: 'G', name: 'Gramy', label: ' g', min: 0, max: 5000, step: [10, 100] },\r\n        { code: 'SPOON', name: 'Łyżka', label: ' łyżki', min: 0, max: 10, step: [0.25, 1] },\r\n        { code: 'TEASPOON', name: 'Łyżeczka', label: ' łyżeczki', min: 0, max: 10, step: [0.5, 1] },\r\n    ],\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  text-align: center;\r\n  margin: 10px auto;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`\r\n\r\nconst Btn = styled(Button)`\r\n  position: absolute;\r\n  min-width: 60px;\r\n  left: ${props => props.onRight ? 'inherit' : '10px'};\r\n  right: ${props => props.onRight ? '10px' : 'inherit'};\r\n`\r\n\r\nconst SideButton = ({ onRight, buttonObj }) => {\r\n    const { push } = useHistory()\r\n    if(buttonObj) {\r\n        return(\r\n            <Btn variant={buttonObj.variant} onRight={onRight} onClick={() => push(buttonObj.link)}>\r\n                <FontAwesomeIcon icon={buttonObj.icon}/>\r\n            </Btn>\r\n        )\r\n    }else{\r\n        return <></>\r\n    }\r\n}\r\n\r\nSideButton.propTypes = {\r\n    onRight: PropTypes.bool,\r\n    buttonObj: PropTypes.object\r\n}\r\n\r\nSideButton.defaultProps = {\r\n    onRight: false\r\n}\r\n\r\nconst CardTitle = ({children, leftButton, rightButton}) => {\r\n\r\n    return(\r\n        <Container>\r\n            <SideButton buttonObj={leftButton}/>\r\n            {children}\r\n            <SideButton onRight buttonObj={rightButton}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nCardTitle.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    leftButton: PropTypes.object,\r\n    rightButton: PropTypes.object,\r\n}\r\n\r\nexport default CardTitle\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport config from '../config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\n\r\nconst ButtonGroup = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nconst CategoryButton = styled(Button)`\r\n  position: relative;\r\n  text-align: left;\r\n  line-height: 40px;\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst CategoryArrowIcon = styled(FontAwesomeIcon)`\r\n  position: absolute;\r\n  right: 20px;\r\n  margin-top: 20px;\r\n  transform: translateY(-50%);\r\n`\r\n\r\nconst CategoryBrowser = () => {\r\n    const history = useHistory()\r\n    return(\r\n        <>\r\n            <CardTitle>Wybierz kategorię</CardTitle>\r\n            <ButtonGroup>\r\n                {\r\n                    config.categories.map(category => (\r\n                        <CategoryButton key={category.code}\r\n                                        variant={'light'}\r\n                                        block\r\n                                        onClick={() => history.push(`/recipes/${category.code}`)}>\r\n                            {category.name}\r\n                            <CategoryArrowIcon icon={faChevronRight} />\r\n                        </CategoryButton>\r\n                    ))\r\n                }\r\n            </ButtonGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryBrowser\r\n","import firebase from '../firebase'\r\n\r\nconst RECIPES_COLL = 'recipes'\r\nconst STEPS_FIELD = 'steps'\r\nconst INGREDIENTS_FIELD = 'ingredients'\r\n\r\n// RECIPES\r\nexport const getRecipesFromCategory = (categoryCode, sortData = true) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).where('category', '==', categoryCode).get()\r\n        .then(docs => {\r\n            let data = []\r\n            docs.forEach(recipe => {\r\n                data.push({ id: recipe.id, ...recipe.data() })\r\n            })\r\n            if(sortData) {\r\n                data = data.sort((a, b) => {\r\n                    if(a.name < b.name) return -1\r\n                    if(a.name > b.name) return 1\r\n                    return 0\r\n                })\r\n            }\r\n            return data\r\n        })\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const getRecipe = recipeId => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).get()\r\n        .then(doc => (doc.exists ? doc.data() : []))\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const getAllRecipes = () => {\r\n    return firebase.firestore().collection(RECIPES_COLL).get()\r\n        .then(docs => {\r\n            let data = []\r\n            docs.forEach(recipe => { data.push({ id: recipe.id, ...recipe.data() }) })\r\n            return data\r\n        })\r\n        .catch(err => alert(`SEARCH ERROR ${err.code}`))\r\n}\r\n\r\nexport const deleteRecipe = recipeId => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).delete()\r\n        .catch(err => alert(`DELETE ERROR ${err.code}`))\r\n}\r\n\r\nexport const addRecipe = (category, name, difficult, preparationTime, cookingTime) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).add({\r\n        category, name, difficult, preparationTime, cookingTime, [STEPS_FIELD]: [], [INGREDIENTS_FIELD]: []\r\n    })\r\n        .then(res => res.id)\r\n        .catch(err => alert(`ADD ERROR ${err.code}`))\r\n}\r\n\r\nexport const updateRecipe = (recipeId, name, difficult, preparationTime, cookingTime) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).update({\r\n        name, difficult, preparationTime, cookingTime\r\n    })\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n\r\nexport const getRecipeField = (recipeId, fieldName) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).get()\r\n        .then(recipe => recipe.data()[fieldName])\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const updateRecipeField = (recipeId, fieldName, data) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).update({\r\n        [fieldName]: data\r\n    })\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n\r\n// STEPS\r\nexport const getStepsFromRecipe = recipeId => getRecipeField(recipeId, STEPS_FIELD)\r\n\r\nexport const updateSteps = (recipeId, stepArray) => updateRecipeField(recipeId, STEPS_FIELD, stepArray)\r\n\r\n// INGREDIENTS\r\nexport const getIngredientsFromRecipe = recipeId => getRecipeField(recipeId, INGREDIENTS_FIELD)\r\n\r\nexport const updateIngredients = (recipeId, ingredientArray) => updateRecipeField(recipeId, INGREDIENTS_FIELD, ingredientArray)\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  margin: 15px auto;\r\n  font-size: 18px;\r\n  font-style: italic;\r\n`\r\n\r\nconst DataLoader = ({viewer, loader, refreshFlag, noPreventEmptyList}) => {\r\n    const [data, setData] = useState(null)\r\n    useEffect(() => {\r\n        loader().then(resp => setData(resp))\r\n    }, [loader, refreshFlag])\r\n    if(data) {\r\n        if(!noPreventEmptyList && Array.isArray(data) && data.length === 0) {\r\n            return(<Container>Lista jest pusta</Container>)\r\n        }else{\r\n            return(viewer(data, setData))\r\n        }\r\n    }else{\r\n        return(<Container>Ładowanie...</Container>)\r\n    }\r\n}\r\n\r\nDataLoader.propTypes = {\r\n    viewer: PropTypes.func.isRequired,\r\n    loader: PropTypes.func.isRequired,\r\n    refreshFlag: PropTypes.bool,\r\n    noPreventEmptyList: PropTypes.bool,\r\n}\r\n\r\nDataLoader.defaultProps = {\r\n    refreshFlag: false,\r\n    noPreventEmptyList: false,\r\n}\r\n\r\nexport default DataLoader\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport config from '../config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight, faChevronLeft, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport { getRecipesFromCategory } from '../firebase/firestore/recipes'\r\nimport DataLoader from '../components/DataLoader'\r\n\r\nconst ButtonGroup = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nconst RecipeButton = styled(Button)`\r\n  position: relative;\r\n  text-align: left;\r\n  line-height: 40px;\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst CategoryArrowIcon = styled(FontAwesomeIcon)`\r\n  position: absolute;\r\n  right: 20px;\r\n  margin-top: 20px;\r\n  transform: translateY(-50%);\r\n`\r\n\r\nconst RecipeBrowser = () => {\r\n    const history = useHistory()\r\n    const { category } = useParams()\r\n    return(\r\n        <>\r\n            <CardTitle\r\n                leftButton={{ link: `/recipes`, variant: `light`, icon: faChevronLeft }}\r\n                rightButton={{ link: `/recipes/${category}/add`, variant: `success`, icon: faPlusCircle }}>\r\n                {config.categories.find(c => c.code === category).name}\r\n            </CardTitle>\r\n            <DataLoader loader={() => getRecipesFromCategory(category)}\r\n                        viewer={data => (\r\n                            <ButtonGroup>\r\n                                {\r\n                                    data.map(recipe => (\r\n                                        <RecipeButton key={recipe.id}\r\n                                                        variant={'light'}\r\n                                                        block\r\n                                                        onClick={() => history.push(`/recipes/${category}/${recipe.id}`)}>\r\n                                            {recipe.name}\r\n                                            <CategoryArrowIcon icon={faChevronRight} />\r\n                                        </RecipeButton>\r\n                                    ))\r\n                                }\r\n                            </ButtonGroup>\r\n                        )}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeBrowser\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nconst ModalWindow = ({ show, onCancel, onSubmit, title, text }) => {\r\n\r\n    return(\r\n        <Modal show={show} onHide={onCancel}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {text}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onCancel}>Anuluj</Button>\r\n                <Button variant=\"danger\" onClick={onSubmit}>Potwierdź</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nModalWindow.propTypes = {\r\n    show: PropTypes.bool,\r\n    onCancel: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string,\r\n}\r\n\r\nModalWindow.defaultProps = {\r\n    show: true,\r\n    title: 'Potwierdzenie',\r\n    text: 'Czy na pewno chcesz kontynuować?',\r\n}\r\n\r\nexport default ModalWindow\r\n","import firebase from '../firebase'\r\n\r\nconst SHOPPING_LIST_COLL = 'shoppingList'\r\n\r\nexport const getShoppingList = uid => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).get()\r\n        .then(doc => (doc.exists ? doc.data().list : []))\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const updateShoppingList = (uid, list) => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).update(list)\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n\r\nexport const clearShoppingList = uid => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).set({ list: [] })\r\n        .catch(err => alert(`SET ERROR ${err.code}`))\r\n}\r\n\r\nexport const addToShoppingList = (uid, obj) => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).set({\r\n        list: typeof obj === 'string' ? firebase.firestore.FieldValue.arrayUnion(obj) : firebase.firestore.FieldValue.arrayUnion(...obj)\r\n    }, { merge: true })\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n\r\nexport const deleteFromShoppingList = (uid, obj) => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).set({\r\n        list: typeof obj === 'string' ? firebase.firestore.FieldValue.arrayRemove(obj) : firebase.firestore.FieldValue.arrayRemove(...obj)\r\n    }, { merge: true })\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button, ButtonGroup, Form, InputGroup } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faShoppingCart, faClipboard, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport {addToShoppingList, clearShoppingList, deleteFromShoppingList} from '../firebase/firestore/shoppingList'\r\nimport config from '../config'\r\nimport copy from 'copy-to-clipboard'\r\nimport firebase from  '../firebase/firebase'\r\nimport ModalWindow from './ModalWindow'\r\n\r\nconst ListContainer = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst ItemContainer = styled.div`\r\n  position: relative;\r\n  background-color: #fff;\r\n  max-width: 600px;\r\n  margin: 0 auto 5px auto;\r\n  height: 44px;\r\n  line-height: 44px;\r\n  border-radius: 4px;\r\n  color: #000;\r\n  padding-left: 70px;\r\n  overflow-y: hidden;\r\n  text-align: left;\r\n  text-decoration: ${props => props.lineThrough ? 'line-through' : 'none'};\r\n`\r\n\r\nconst ItemButton = styled(Button)`\r\n  position: absolute;\r\n  top: 6px;\r\n  left: 6px;\r\n  min-width: 50px;\r\n  text-align: center;\r\n`\r\n\r\nconst MainOptionContainer = styled(ButtonGroup)`\r\n  display: block;\r\n  text-align: center;\r\n  padding: 0 15px;\r\n  max-width: 600px;\r\n  margin: 15px auto;\r\n  svg { margin: 0 8px; }\r\n`\r\n\r\nconst ManualAdder = styled(InputGroup)`\r\n  margin: 15px auto;\r\n  max-width: 600px;\r\n`\r\n\r\nconst getUnitName = unitCode => {\r\n    const unit = config.ingredientUtils.find(i => i.code === unitCode)\r\n    return unit ? unit.name : ''\r\n}\r\n\r\nconst convertObjects = list => {\r\n    if(list.length === 0) return []\r\n    if(typeof list[0] === 'string') return list\r\n    if(typeof list[0] === 'object' && list[0] !== null) {\r\n        return list.map(i => {\r\n            if(i.unit === '') {\r\n                return ''\r\n            }else{\r\n                return `${i.name} [${getUnitName(i.unit)}]${i.value === 0 ? '' : ' - ' + i.value}`\r\n            }\r\n        })\r\n    }\r\n    return []\r\n}\r\n\r\nconst ListItem = ({ item, itemAdded, addOption, deleteOption }) => {\r\n    const [actionExecuted, setActionExecuted] = useState(false)\r\n    const uid = firebase.auth().currentUser.uid\r\n\r\n    const addAction = () => {\r\n        setActionExecuted(true)\r\n        addToShoppingList(uid, item)\r\n    }\r\n    const deleteAction = () => {\r\n        setActionExecuted(true)\r\n        deleteFromShoppingList(uid, item)\r\n    }\r\n\r\n    return(\r\n        <ItemContainer lineThrough={deleteOption && actionExecuted}>\r\n            {\r\n                addOption\r\n                &&\r\n                <ItemButton variant={'success'} size={'sm'} disabled={actionExecuted || itemAdded} onClick={addAction}>\r\n                    <FontAwesomeIcon icon={actionExecuted || itemAdded ? faCheck : faShoppingCart}/>\r\n                </ItemButton>\r\n            }\r\n            {\r\n                deleteOption\r\n                &&\r\n                <ItemButton variant={'danger'} size={'sm'} disabled={actionExecuted} onClick={deleteAction}>\r\n                    <FontAwesomeIcon icon={faTrash}/>\r\n                </ItemButton>\r\n            }\r\n            {item}\r\n        </ItemContainer>\r\n    )\r\n}\r\n\r\nListItem.propTypes = {\r\n    item: PropTypes.string.isRequired,\r\n    itemAdded: PropTypes.bool,\r\n    addOption: PropTypes.bool,\r\n    deleteOption: PropTypes.bool,\r\n}\r\n\r\nconst IngredientList = (props) => {\r\n    const [list, setList] = useState(convertObjects(props.list))\r\n    const [itemsAdded, setItemsAdded] = useState(false)\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false)\r\n    const [dataCopied, setDataCopied] = useState(false)\r\n    const [customItem, setCustomItem] = useState('')\r\n    const uid = firebase.auth().currentUser.uid\r\n\r\n    const addAll = () => {\r\n        setItemsAdded(true)\r\n        addToShoppingList(uid, list)\r\n    }\r\n    const deleteAll = () => {\r\n        setDeleteModalIsOpen(false)\r\n        setList([])\r\n        clearShoppingList(uid)\r\n    }\r\n    const copyToClipboard = () => {\r\n        setDataCopied(true)\r\n        copy(list.join('\\n'))\r\n        setTimeout(() => setDataCopied(false), 2000)\r\n    }\r\n    const addCustomItem = () => {\r\n        setList([\r\n            ...list,\r\n            customItem\r\n        ])\r\n        addToShoppingList(uid, customItem)\r\n        setCustomItem('')\r\n    }\r\n\r\n    return(\r\n        <ListContainer>\r\n            <MainOptionContainer block>\r\n                {\r\n                    props.addAllOption\r\n                    &&\r\n                    <Button variant={'success'} onClick={addAll} disabled={itemsAdded || list.length === 0}>\r\n                        <FontAwesomeIcon icon={itemsAdded ? faCheck : faShoppingCart}/>{itemsAdded ? 'Dodano' : 'Dodaj wszystkie'}\r\n                    </Button>\r\n                }\r\n                {\r\n                    props.clearOption\r\n                    &&\r\n                    <Button variant={'danger'} onClick={() => setDeleteModalIsOpen(true)} disabled={list.length === 0}>\r\n                        <FontAwesomeIcon icon={faTrash}/>Wyczyść\r\n                    </Button>\r\n                }\r\n                {\r\n                    props.exportOption\r\n                    &&\r\n                    <Button variant={'warning'} onClick={copyToClipboard} disabled={dataCopied || list.length === 0}>\r\n                        <FontAwesomeIcon icon={dataCopied ? faCheck : faClipboard}/>{dataCopied ? 'Zapisano!' : 'Do schowka'}\r\n                    </Button>\r\n                }\r\n            </MainOptionContainer>\r\n            {\r\n                list.map(item => (\r\n                    <ListItem key={item} item={item} itemsAdded={itemsAdded} {...props} />\r\n                ))\r\n            }\r\n            {list.length === 0 && <i>(lista składników jest pusta)</i>}\r\n            {\r\n                props.manualAdder\r\n                &&\r\n                <ManualAdder>\r\n                    <Form.Control type={'text'}\r\n                                  value={customItem}\r\n                                  onChange={e => setCustomItem(e.target.value)} placeholder={'Nowa pozycja'}\r\n                                  maxLength={'50'} />\r\n                    <InputGroup.Append>\r\n                        <Button variant={'success'}\r\n                                onClick={addCustomItem}\r\n                                disabled={customItem.length < 5}>\r\n                            Dodaj\r\n                        </Button>\r\n                    </InputGroup.Append>\r\n                </ManualAdder>\r\n            }\r\n            <ModalWindow show={deleteModalIsOpen}\r\n                         onSubmit={deleteAll}\r\n                         onCancel={() => setDeleteModalIsOpen(false)}\r\n                         text={'Czy chcesz usunąć całą listę zakupów?'} />\r\n        </ListContainer>\r\n    )\r\n}\r\n\r\nIngredientList.propTypes = {\r\n    list: PropTypes.array.isRequired,\r\n    addOption: PropTypes.bool,\r\n    deleteOption: PropTypes.bool,\r\n    exportOption: PropTypes.bool,\r\n    addAllOption: PropTypes.bool,\r\n    clearOption: PropTypes.bool,\r\n    manualAdder: PropTypes.bool,\r\n}\r\n\r\nexport default IngredientList\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faChevronLeft, faPlayCircle, faStar as solidFaStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStar as regularFaStar } from '@fortawesome/free-regular-svg-icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport { getRecipe, deleteRecipe } from '../firebase/firestore/recipes'\r\nimport DataLoader from '../components/DataLoader'\r\nimport ModalWindow from '../components/ModalWindow'\r\nimport IngredientList from '../components/IngredientList'\r\n\r\nconst RecipeTitleContainer = styled.div`\r\n  margin: 50px 20px 30px;\r\n  font-size: 1.2rem;\r\n`\r\n\r\nconst Title = styled.div`\r\n  text-align: center;\r\n  margin-top: 14px;\r\n`\r\n\r\nconst Content = styled.div`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  margin: 6px 0 0 0;\r\n`\r\n\r\nconst TimerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 20px;\r\n`\r\n\r\nconst SingleTimerContainer = styled.div`\r\n  flex: 1;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  div {\r\n    font-size: 3rem;\r\n  }\r\n`\r\n\r\nconst FooterButton = styled(Button)`\r\n  min-width: 200px;\r\n  max-width: 600px;\r\n  margin: 5px auto;\r\n  svg { margin-right: 6px; }\r\n`\r\n\r\nconst DifficultMeter = ({level}) => (\r\n    <Content>\r\n        {[1,2,3,4,5].map(i => <FontAwesomeIcon key={i} icon={level >= i ? solidFaStar : regularFaStar} />)}\r\n    </Content>\r\n)\r\n\r\nDifficultMeter.propTypes = {\r\n    level: PropTypes.number.isRequired\r\n}\r\n\r\nconst TimeDisplay = ({minutes, description}) => {\r\n    let h = Math.floor(minutes / 60)\r\n    let m = minutes % 60\r\n    if(m < 10) m = '0' + m\r\n    return (\r\n        <SingleTimerContainer>\r\n            {minutes === 0 ? <div>--:--</div> : <div>{h}:{m}</div>}\r\n            {description}\r\n        </SingleTimerContainer>\r\n    )\r\n}\r\n\r\nTimeDisplay.propTypes = {\r\n    minutes: PropTypes.number.isRequired,\r\n    description: PropTypes.string,\r\n}\r\n\r\nconst RecipePreview = () => {\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false)\r\n    const { push } = useHistory()\r\n    const { category, recipe } = useParams()\r\n\r\n    return (\r\n        <>\r\n            <DataLoader loader={() => getRecipe(recipe)} viewer={data => (\r\n                <>\r\n                    <CardTitle\r\n                        leftButton={{ link: `/recipes/${category}`, variant: `light`, icon: faChevronLeft }}\r\n                        rightButton={data.steps.length > 0 && { link: `/recipes/${category}/${recipe}/cooking`, variant: `success`, icon: faPlayCircle }}>\r\n                        Podgląd przepisu\r\n                    </CardTitle>\r\n                    <RecipeTitleContainer>\r\n                        <Content>{data.name}</Content>\r\n                        <DifficultMeter level={data.difficult} />\r\n                        <TimerContainer>\r\n                            <TimeDisplay minutes={data.preparationTime} description={'Czas przygotowywania'} />\r\n                            <TimeDisplay minutes={data.cookingTime} description={'Czas gotowania'} />\r\n                        </TimerContainer>\r\n                    </RecipeTitleContainer>\r\n                    <Title>Lista składników</Title>\r\n                    <IngredientList list={data.ingredients} addOption addAllOption exportOption />\r\n                    <Title>Zarządzanie przepisem</Title>\r\n                    <Content>\r\n                        <FooterButton variant={'secondary'} block onClick={() => push(`/recipes/${category}/${recipe}/edit-recipe`)}>Edytuj przepis</FooterButton>\r\n                        <FooterButton variant={'secondary'} block onClick={() => push(`/recipes/${category}/${recipe}/edit-ingredients`)}>Edytuj listę składników</FooterButton>\r\n                        <FooterButton variant={'secondary'} block onClick={() => push(`/recipes/${category}/${recipe}/edit-steps`)}>Edytuj listę kroków</FooterButton>\r\n                        <FooterButton variant={'danger'} block onClick={() => setDeleteModalIsOpen(true)}>\r\n                            <FontAwesomeIcon icon={faTrash} /> Usuń przepis\r\n                        </FooterButton>\r\n                    </Content>\r\n                </>\r\n            )} />\r\n            <ModalWindow show={deleteModalIsOpen}\r\n                         text={'Czy chcesz usunąć cały przepis?'}\r\n                         onSubmit={() => deleteRecipe(recipe).then(() => push(`/recipes/${category}`))}\r\n                         onCancel={() => setDeleteModalIsOpen(false)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipePreview\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nconst useTimer = (onTimeOver) => {\r\n    const [status, setStatus] = useState({\r\n        isRunning: false,\r\n        startTime: 0,\r\n        initialTime: 0,\r\n        timeLeft: 0,\r\n        lastSetTimeValue: 0,\r\n    })\r\n    const intervalRef = useRef()\r\n\r\n    const update = () => {\r\n        setStatus(current => {\r\n            if(current.timeLeft <= 0) {\r\n                stopService()\r\n                if(onTimeOver) onTimeOver()\r\n                return {\r\n                    ...current,\r\n                    isRunning: false,\r\n                    timeLeft: 0\r\n                }\r\n            }else{\r\n                return {\r\n                    ...current,\r\n                    timeLeft: Math.floor(current.initialTime - (new Date() - current.startTime.getTime()) / 1000)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const stopService = () => {\r\n        if(intervalRef.current) {\r\n            clearInterval(intervalRef.current)\r\n            intervalRef.current = undefined\r\n        }\r\n    }\r\n\r\n    const startService = () => {\r\n        if(!intervalRef.current) {\r\n            intervalRef.current = setInterval(update, 100)\r\n            update()\r\n        }\r\n    }\r\n\r\n    const play = () => {\r\n        if(!status.isRunning && status.timeLeft > 0) {\r\n            setStatus(current => ({\r\n                ...current,\r\n                isRunning: true,\r\n                initialTime: current.timeLeft,\r\n                startTime: new Date(),\r\n            }))\r\n            startService()\r\n        }\r\n    }\r\n\r\n    const pause = () => {\r\n        if(status.isRunning) {\r\n            setStatus(current => ({\r\n                ...current,\r\n                isRunning: false,\r\n            }))\r\n            stopService()\r\n        }\r\n    }\r\n\r\n    const resetTime = (autoPause = true) => {\r\n        setStatus(current => ({\r\n            ...current,\r\n            isRunning: autoPause ? false : current.isRunning,\r\n            startTime: new Date(),\r\n            initialTime: current.lastSetTimeValue,\r\n            timeLeft: current.lastSetTimeValue,\r\n        }))\r\n        if(autoPause) stopService()\r\n    }\r\n\r\n    const setTime = (newTime, autoStart = false) => {\r\n        setStatus({\r\n            isRunning: false,\r\n            startTime: 0,\r\n            initialTime: newTime,\r\n            timeLeft: newTime,\r\n            lastSetTimeValue: newTime,\r\n        })\r\n        stopService()\r\n        if(autoStart) play()\r\n    }\r\n\r\n    useEffect(() => stopService, [])\r\n\r\n    return {\r\n        isRunning: status.isRunning,\r\n        timeLeft: status.timeLeft,\r\n        play,\r\n        pause,\r\n        resetTime,\r\n        setTime,\r\n    }\r\n}\r\n\r\nexport default useTimer\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinus, faPlus, faPlay, faPause, faUndo } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button } from 'react-bootstrap'\r\nimport useTimer from '../hooks/useTimer'\r\n\r\nconst MIN_FONT_SIZE = 18\r\nconst MAX_FONT_SIZE = 50\r\n\r\nconst PopupMainContainer = styled.div`\r\n  display: ${props => props.hide ? 'none' : 'block'};\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 180px;\r\n  width: 100%;\r\n`\r\n\r\nconst PopupContainer = styled.div`\r\n  position: relative;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  width: 320px;\r\n  max-width: 90vw;\r\n  height: 90px;\r\n  margin: 0 auto;\r\n  color: #000;\r\n`\r\n\r\nconst Title = styled.div`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  padding: 8px 0;\r\n`\r\n\r\nconst CenterText = styled.div`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  position: relative;\r\n  bottom: 6px;\r\n  margin: 0 70px;\r\n`\r\n\r\nconst SideButton = styled(Button)`\r\n  position: absolute;\r\n  left: ${props => props.onRight ? 'inherit' : '10px'};\r\n  right: ${props => props.onRight ? '10px' : 'inherit'};\r\n`\r\n\r\nconst generateTimerString = timeLeft => {\r\n    if(timeLeft === 0) return `-:--:--`\r\n    let h = Math.floor(timeLeft / 3600)\r\n    let m = Math.floor(timeLeft / 60)\r\n    let s = Math.floor(timeLeft - h * 3600 - m * 60)\r\n    if(m < 10) m = '0' + m\r\n    if(s < 10) s = '0' + s\r\n    return `${h}:${m}:${s}`\r\n}\r\n\r\nconst CookingPopupPanel = ({popupMode, stepTimerValue, fontSize, onFontSizeChange, onTimeOver}) => {\r\n    const { isRunning, timeLeft, play, pause, setTime, } = useTimer(() => {\r\n        if(onTimeOver) onTimeOver()\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(!isRunning) setTime(stepTimerValue * 60)\r\n    }, [stepTimerValue])\r\n\r\n    const playPauseButton = () => {\r\n        if(isRunning) {\r\n            pause()\r\n        }else{\r\n            play()\r\n        }\r\n    }\r\n\r\n    const resetButton = () => {\r\n        if(!isRunning) setTime(stepTimerValue * 60)\r\n    }\r\n\r\n    return(\r\n        <PopupMainContainer hide={popupMode === 'OFF'}>\r\n            <PopupContainer>\r\n                <Title>{popupMode === 'TIMER' ? 'Timer' : 'Rozmiar czcionki'}</Title>\r\n                {\r\n                    popupMode === 'TIMER'\r\n                    ?\r\n                        <>\r\n                            <SideButton variant={'secondary'} onClick={playPauseButton}>\r\n                                <FontAwesomeIcon icon={isRunning ? faPause : faPlay}/>\r\n                            </SideButton>\r\n                            <SideButton variant={'secondary'} onRight disabled={isRunning} onClick={resetButton}>\r\n                                <FontAwesomeIcon icon={faUndo}/>\r\n                            </SideButton>\r\n                            <CenterText>{generateTimerString(timeLeft)}</CenterText>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <SideButton variant={'secondary'} disabled={fontSize - 2 < MIN_FONT_SIZE} onClick={() => onFontSizeChange(fontSize - 2)}>\r\n                                <FontAwesomeIcon icon={faMinus}/>\r\n                            </SideButton>\r\n                            <SideButton variant={'secondary'} onRight disabled={fontSize + 2 > MAX_FONT_SIZE} onClick={() => onFontSizeChange(fontSize + 2)}>\r\n                                <FontAwesomeIcon icon={faPlus}/>\r\n                            </SideButton>\r\n                            <CenterText>{fontSize}</CenterText>\r\n                        </>\r\n                }\r\n            </PopupContainer>\r\n        </PopupMainContainer>\r\n    )\r\n}\r\n\r\nCookingPopupPanel.propTypes = {\r\n    popupMode: PropTypes.string,\r\n    stepTimerValue: PropTypes.number.isRequired,\r\n    fontSize: PropTypes.number.isRequired,\r\n    onFontSizeChange: PropTypes.func.isRequired,\r\n    onTimeOver: PropTypes.func,\r\n}\r\n\r\nCookingPopupPanel.defaultProps = {\r\n    popupMode: 'OFF',\r\n}\r\n\r\nexport default CookingPopupPanel\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCarrot, faClock, faSearchPlus, faChevronLeft, faTimes, faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { getRecipe } from '../firebase/firestore/recipes'\r\nimport DataLoader from '../components/DataLoader'\r\nimport ModalWindow from '../components/ModalWindow'\r\nimport config from '../config'\r\nimport CookingPopupPanel from '../components/CookingPopupPanel'\r\n\r\nconst TextContainer = styled.div`\r\n  font-size: ${props => props.fontSize + 'px'};\r\n  padding: 20px 20px 240px;\r\n`\r\n\r\nconst ControlButtonMainContainer = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 10px;\r\n  width: 100%;\r\n`\r\n\r\nconst ControlButtonRowContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  max-width: 300px;\r\n  margin: 15px auto;\r\n`\r\n\r\nconst ControlButtonStyle = styled(Button)`\r\n  flex: 1;\r\n  border-radius: 50%;\r\n  display: block;\r\n  max-width: 60px;\r\n  height: 60px;\r\n  margin: 0 auto;\r\n  font-size: 1.6rem;\r\n`\r\n\r\nconst ControlButton = ({variant = 'light', icon, onClick, disabled}) => {\r\n\r\n    return(\r\n        <ControlButtonStyle variant={variant} onClick={onClick} disabled={disabled}>\r\n            <FontAwesomeIcon icon={icon} />\r\n        </ControlButtonStyle>\r\n    )\r\n}\r\n\r\nControlButton.propTypes = {\r\n    variant: PropTypes.string,\r\n    icon: PropTypes.object.isRequired,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n}\r\n\r\nconst getUnitName = unitCode => {\r\n    const unit = config.ingredientUtils.find(i => i.code === unitCode)\r\n    return unit ? unit.name : ''\r\n}\r\n\r\nconst getIngredientList = ingredients => (\r\n    ingredients.map((i, idx) => (\r\n        <div key={i.id}>{`${idx+1}. ${i.name} [${getUnitName(i.unit)}]${i.value === 0 ? '' : ' - ' + i.value}`}</div>\r\n    ))\r\n)\r\n\r\nconst Cooking = () => {\r\n    const [ingredientMode, setIngredientMode] = useState(false)\r\n    const [popupMode, setPopupMode] = useState('OFF')\r\n    const [fontSize, setFontSize] = useState(28)\r\n    const [stepNumber, setStepNumber] = useState(0)\r\n    const [exitModalIsOpen, setExitModalIsOpen] = useState(false)\r\n    const { push } = useHistory()\r\n    const { category, recipe } = useParams()\r\n\r\n    const switchStep = (data, diff) => {\r\n        setStepNumber(v => {\r\n            if(ingredientMode) setIngredientMode(false)\r\n\r\n            return v + diff\r\n        })\r\n    }\r\n\r\n    const switchPopup = popupId => {\r\n        setPopupMode(popupId === popupMode ? 'OFF' : popupId)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <DataLoader loader={() => getRecipe(recipe)} viewer={data => (\r\n                <>\r\n                    <TextContainer fontSize={fontSize}>\r\n                        {ingredientMode ? getIngredientList(data.ingredients) : `${stepNumber+1}. ${data.steps[stepNumber].text}`}\r\n                    </TextContainer>\r\n                    <CookingPopupPanel popupMode={popupMode}\r\n                                       stepTimerValue={data.steps[stepNumber].timer}\r\n                                       fontSize={fontSize}\r\n                                       onFontSizeChange={v => setFontSize(v)}\r\n                                       onTimeOver={() => {setTimeout(() => setPopupMode('TIMER'), 0)}} />\r\n                    <ControlButtonMainContainer>\r\n                        <ControlButtonRowContainer>\r\n                            <ControlButton icon={faCarrot}\r\n                                           variant={ingredientMode ? 'warning' : undefined}\r\n                                           onClick={() => setIngredientMode(v => !v)} />\r\n                            <ControlButton icon={faClock}\r\n                                           variant={popupMode === 'TIMER' ? 'warning' : undefined}\r\n                                           onClick={() => switchPopup('TIMER')} />\r\n                            <ControlButton icon={faSearchPlus}\r\n                                           variant={popupMode === 'FONT' ? 'warning' : undefined}\r\n                                           onClick={() => switchPopup('FONT')} />\r\n                        </ControlButtonRowContainer>\r\n                        <ControlButtonRowContainer>\r\n                            <ControlButton icon={faChevronLeft}\r\n                                           disabled={stepNumber === 0}\r\n                                           onClick={() => switchStep(data, -1)} />\r\n                            <ControlButton icon={faTimes}\r\n                                           variant={'secondary'}\r\n                                           onClick={() => setExitModalIsOpen(true)} />\r\n                            <ControlButton icon={faChevronRight}\r\n                                           disabled={data.steps.length - 1 <= stepNumber}\r\n                                           onClick={() => switchStep(data, 1)} />\r\n                        </ControlButtonRowContainer>\r\n                    </ControlButtonMainContainer>\r\n                </>\r\n            )}/>\r\n            <ModalWindow show={exitModalIsOpen}\r\n                         text={'Czy chcesz wyjść z trybu gotowania?'}\r\n                         onSubmit={() => push(`/recipes/${category}/${recipe}`)}\r\n                         onCancel={() => setExitModalIsOpen(false)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cooking\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button, Form, InputGroup } from 'react-bootstrap'\r\n\r\nconst Container = styled.div`\r\n    margin: 2px 0;\r\n`\r\n\r\nconst Btn = styled(Button)`\r\n  min-width: 40px;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n`\r\n\r\nconst NumberPicker = ({minValue, maxValue, step, value, onChange, prefix, label, zeroCustomText}) => {\r\n    const [val, setVal] = useState(value)\r\n    useEffect(() => setVal(value), [value])\r\n\r\n    const updateValue = diff => {\r\n        setVal(v => {\r\n            const newValue = Math.round((v + diff) * 100) / 100\r\n            onChange(newValue)\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <InputGroup>\r\n                {\r\n                    step\r\n                    &&\r\n                    <InputGroup.Prepend>\r\n                        {\r\n                            step.slice().reverse().map(s => (\r\n                                <Btn key={'dn'+s} variant={'secondary'}\r\n                                     onClick={() => updateValue(-s)}\r\n                                     disabled={val - s < minValue}>\r\n                                    -{s}\r\n                                </Btn>\r\n                            ))\r\n                        }\r\n                    </InputGroup.Prepend>\r\n                }\r\n                <Form.Control type={'text'}\r\n                              value={val === 0 && zeroCustomText ? zeroCustomText : `${prefix}${val}${label}`}\r\n                              style={{textAlign: 'center'}}\r\n                              readOnly />\r\n                {\r\n                    step\r\n                    &&\r\n                    <InputGroup.Append>\r\n                        {\r\n                            step.map(s => (\r\n                                <Btn key={'up'+s} variant={'secondary'}\r\n                                     onClick={() => updateValue(s)}\r\n                                     disabled={val + s > maxValue}>\r\n                                    +{s}\r\n                                </Btn>\r\n                            ))\r\n                        }\r\n                    </InputGroup.Append>\r\n                }\r\n            </InputGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nNumberPicker.propTypes = {\r\n    minValue: PropTypes.number,\r\n    maxValue: PropTypes.number,\r\n    step: PropTypes.array,\r\n    value: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    prefix: PropTypes.string,\r\n    label: PropTypes.string,\r\n    zeroCustomText: PropTypes.string,\r\n}\r\n\r\nNumberPicker.defaultProps = {\r\n    minValue: 0,\r\n    maxValue: 100,\r\n    step: [1],\r\n    prefix: '',\r\n    label: '',\r\n}\r\n\r\nexport default NumberPicker\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport NumberPicker from '../components/NumberPicker'\r\nimport { addRecipe, getRecipe, updateRecipe } from '../firebase/firestore/recipes'\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nconst SectionTitle = styled.div`\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  margin-bottom: 4px;\r\n`\r\n\r\nconst FooterMessage = styled.div`\r\n  text-align: center;\r\n  font-size: 14px;\r\n  margin: 15px auto 0 auto;\r\n  max-width: 400px;\r\n`\r\n\r\nconst RecipeEditor = () => {\r\n    const [name, setName] = useState('')\r\n    const [difficult, setDifficult] = useState(1)\r\n    const [preparationTime, setPreparationTime] = useState(0)\r\n    const [cookingTime, setCookingTime] = useState(0)\r\n    const history = useHistory()\r\n    const { category, recipe } = useParams()\r\n\r\n    useEffect(() => {\r\n        if(recipe) {\r\n            getRecipe(recipe)\r\n                .then(currentData => {\r\n                    setName(currentData.name)\r\n                    setDifficult(currentData.difficult)\r\n                    setPreparationTime(currentData.preparationTime)\r\n                    setCookingTime(currentData.cookingTime)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    const validateData = () => name.length > 3\r\n\r\n    const onSubmitButtonClick = () => {\r\n        if(recipe) {\r\n            updateRecipe(recipe, name, difficult, preparationTime, cookingTime)\r\n                .then(() => history.push(`/recipes/${category}/${recipe}`))\r\n        }else{\r\n            addRecipe(category, name, difficult, preparationTime, cookingTime)\r\n                .then(id => history.push(`/recipes/${category}/${id}`))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CardTitle\r\n                leftButton={{ link: recipe ? `/recipes/${category}/${recipe}` : `/recipes/${category}`, variant: `light`, icon: faChevronLeft }}>\r\n                {recipe ? 'Edycja przepisu' : 'Nowy przepis'}\r\n            </CardTitle>\r\n            <Container>\r\n                <SectionTitle>Nazwa przepisu</SectionTitle>\r\n                <Form.Control type={'text'}\r\n                              value={name}\r\n                              onChange={e => setName(e.target.value)}\r\n                              maxLength={40} />\r\n                <SectionTitle>Trudność w przygotowaniu</SectionTitle>\r\n                <NumberPicker onChange={v => setDifficult(v)}\r\n                              value={difficult}\r\n                              minValue={1} maxValue={5} label={'/5'} />\r\n                <SectionTitle>Czas przygotowania</SectionTitle>\r\n                <NumberPicker onChange={v => setPreparationTime(v)}\r\n                              value={preparationTime} step={[10]}\r\n                              maxValue={300} label={' min'} downText={'-10'} upText={'+10'} />\r\n                <SectionTitle>Czas gotowania</SectionTitle>\r\n                <NumberPicker onChange={v => setCookingTime(v)}\r\n                              value={cookingTime} step={[10]}\r\n                              maxValue={300} label={' min'} downText={'-10'} upText={'+10'} />\r\n                <FooterMessage>\r\n                    Redagowanie listy składników oraz kroków gotowania możliwe jest z poziomu ekranu przepisu\r\n                </FooterMessage>\r\n                <Button variant={'success'} style={{marginTop: '20px'}}\r\n                        disabled={!validateData()} onClick={onSubmitButtonClick} block>\r\n                    {recipe ? 'Zaktualizuj przepis' : 'Dodaj przepis'}\r\n                </Button>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeEditor\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport NumberPicker from './NumberPicker'\r\nimport ModalWindow from './ModalWindow'\r\nimport config from '../config'\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => props.highlight ? '#ffa14d' : '#ececec'};\r\n  border-radius: 4px;\r\n  margin-bottom: 5px;\r\n  padding: 10px;\r\n  position: relative;\r\n`\r\n\r\nconst Title = styled.div`\r\n  color: #000;\r\n  line-height: 30px;\r\n  margin-bottom: 6px;\r\n`\r\n\r\nconst CornerButton = styled(Button)`\r\n  position: absolute;\r\n  top: 6px;\r\n  right: 10px;\r\n  min-width: 50px;\r\n  text-align: center;\r\n`\r\n\r\nconst DropdownSelector = styled.select`\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  padding: 4px;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst getUnitName = unitCode => {\r\n    const unit = config.ingredientUtils.find(i => i.code === unitCode)\r\n    return unit ? unit.name : ''\r\n}\r\n\r\nconst getUnitConfig = (dictionary, ingredientId) => {\r\n    if(ingredientId === '' || ingredientId === undefined) return {}\r\n    const unitCode = dictionary.find(i => i.id === ingredientId).unit\r\n    const uc = config.ingredientUtils.find(i => i.code === unitCode)\r\n    if(!uc) return {}\r\n    return { minValue: uc.min, maxValue: uc.max, step: uc.step, label: uc.label, code: uc.code }\r\n}\r\n\r\nconst getIngredient = (dictionary, ingredientId) => {\r\n    const item = dictionary.find(i => i.id === ingredientId)\r\n    if(!item) return { id: '', name: '', unit: '' }\r\n    return { id: item.id, name: item.name, unit: item.unit }\r\n}\r\n\r\nconst IngredientSelector = ({dictionary, value, onChange}) => {\r\n\r\n    return(\r\n        <DropdownSelector value={value} onChange={e => onChange(e.target.value)}>\r\n            <option value={''}> - wybierz składnik z listy - </option>\r\n            {dictionary.map(item => (<option key={item.id} value={item.id}>{item.name} [{getUnitName(item.unit)}]</option>))}\r\n        </DropdownSelector>\r\n    )\r\n}\r\n\r\nIngredientSelector.propTypes = {\r\n    dictionary: PropTypes.array.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst RecipeIngredientPanel = ({no, dictionary, initialValues, onDelete, onUpdate}) => {\r\n    const [modified, setModified] = useState(false)\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false)\r\n    const [ingredientId, setIngredientId] = useState(initialValues.id)\r\n    const [value, setValue] = useState(initialValues.value)\r\n\r\n    const unitConfig = getUnitConfig(dictionary, ingredientId)\r\n\r\n    const onSaveChanges = () => {\r\n        onUpdate(no - 1, getIngredient(dictionary, ingredientId), value)\r\n        setModified(false)\r\n    }\r\n    const onIngredientChange = v => {\r\n        setValue(0)\r\n        setIngredientId(v)\r\n        setModified(true)\r\n    }\r\n    const onTimerChange = v => {\r\n        setValue(v)\r\n        setModified(true)\r\n    }\r\n\r\n    return(\r\n        <Container highlight={modified}>\r\n            <Title>Składnik nr {no}</Title>\r\n            {!modified && <CornerButton variant={'danger'} size={'sm'} onClick={() => setDeleteModalIsOpen(true)}><FontAwesomeIcon icon={faTrash}/></CornerButton>}\r\n            {modified && <CornerButton variant={'success'} size={'sm'} onClick={onSaveChanges}><FontAwesomeIcon icon={faCheck}/></CornerButton>}\r\n            <IngredientSelector onChange={onIngredientChange} dictionary={dictionary} value={ingredientId} />\r\n            {ingredientId !== '' && unitConfig.code !== 'UNKNOW' && <NumberPicker value={value} onChange={onTimerChange} {...unitConfig} />}\r\n            <ModalWindow show={deleteModalIsOpen}\r\n                         onSubmit={() => onDelete(no - 1)}\r\n                         onCancel={() => setDeleteModalIsOpen(false)}\r\n                         text={'Czy chcesz usunąć ten składnik? UWAGA: ta operacja zresetuje wszystkie niezapisane dane z pozostałych składników!'} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nRecipeIngredientPanel.propTypes = {\r\n    no: PropTypes.number.isRequired,\r\n    dictionary: PropTypes.array.isRequired,\r\n    initialValues: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default RecipeIngredientPanel\r\n","import firebase from '../firebase'\r\nimport { getIngredientsFromRecipe } from './recipes'\r\n\r\nconst INGREDIENTS_COLL = 'ingredients'\r\n\r\nexport const getIngredients = () => {\r\n    return firebase.firestore().collection(INGREDIENTS_COLL).get()\r\n        .then(collection => {\r\n            return collection.docs\r\n                .map(recipe => ({ id: recipe.id, ...recipe.data() }))\r\n                .sort((a, b) => {\r\n                    if(a.name < b.name) return -1\r\n                    if(a.name > b.name) return 1\r\n                    return 0\r\n                })\r\n        })\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const deleteIngredient = ingredientId => {\r\n    return firebase.firestore().collection(INGREDIENTS_COLL).doc(ingredientId).delete()\r\n        .catch(err => alert(`DELETE ERROR ${err.code}`))\r\n}\r\n\r\nexport const addIngredient = (name, unit) => {\r\n    return firebase.firestore().collection(INGREDIENTS_COLL).add({ name, unit })\r\n        .catch(err => alert(`ADD ERROR ${err.code}`))\r\n}\r\n\r\nexport const getIngredientsFromSystemAndRecipe = recipeId => {\r\n    const fromRecipe = getIngredientsFromRecipe(recipeId)\r\n    const fromSystem = getIngredients()\r\n    return Promise.all([fromRecipe, fromSystem])\r\n        .then(data => ({\r\n            recipe: data[0],\r\n            dictionary: data[1]\r\n        }))\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport DataLoader from '../components/DataLoader'\r\nimport RecipeIngredientPanel from '../components/RecipeIngredientPanel'\r\nimport { updateIngredients } from '../firebase/firestore/recipes'\r\nimport { getIngredientsFromSystemAndRecipe } from '../firebase/firestore/ingredients'\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 10px;\r\n  svg { margin: 0 4px; }\r\n`\r\n\r\nconst NewItemButton = styled(Button)`\r\n  margin-top: 10px;\r\n  width: 200px;\r\n`\r\n\r\nconst cloneObject = obj => JSON.parse(JSON.stringify(obj))\r\n\r\nconst IngredientEditor = () => {\r\n    const { category, recipe } = useParams()\r\n\r\n    const deleteItem = (idx, data, dataSetter) => {\r\n        const newList = cloneObject(data)\r\n        newList.recipe.splice(idx, 1)\r\n        dataSetter(newList)\r\n        updateIngredients(recipe, newList.recipe)\r\n    }\r\n    const addNewItem = (data, dataSetter) => {\r\n        const newList = cloneObject(data)\r\n        newList.recipe.push({ id: '', name: '', unit: '', value: 0 })\r\n        dataSetter(newList)\r\n        updateIngredients(recipe, newList.recipe)\r\n    }\r\n    const updateItem = (idx, ingredient, value, data, dataSetter) => {\r\n        const newList = cloneObject(data)\r\n        newList.recipe[idx] = { id: ingredient.id, name: ingredient.name, unit: ingredient.unit, value }\r\n        dataSetter(newList)\r\n        updateIngredients(recipe, newList.recipe)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CardTitle leftButton={{ link: `/recipes/${category}/${recipe}`, variant: `light`, icon: faChevronLeft }}>\r\n                Edycja składników\r\n            </CardTitle>\r\n            <Container>\r\n                <DataLoader noPreventEmptyList\r\n                            loader={() => getIngredientsFromSystemAndRecipe(recipe)}\r\n                            viewer={(data, dataSetter) => (\r\n                                <>\r\n                                    {\r\n                                        data.recipe.map((item, idx) => (\r\n                                            <RecipeIngredientPanel key={idx+item.name+item.unit+item.value}\r\n                                                                   initialValues={item}\r\n                                                                   no={idx+1}\r\n                                                                   dictionary={data.dictionary}\r\n                                                                   onDelete={idx => deleteItem(idx, data, dataSetter)}\r\n                                                                   onUpdate={(idx, ingredient, value) => updateItem(idx, ingredient, value, data, dataSetter)} />\r\n                                        ))\r\n                                    }\r\n                                    <NewItemButton variant={'success'} onClick={() => addNewItem(data, dataSetter)}>\r\n                                        <FontAwesomeIcon icon={faPlusCircle} /> Nowy składnik\r\n                                    </NewItemButton>\r\n                                </>\r\n                            )} />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IngredientEditor\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport NumberPicker from './NumberPicker'\r\nimport ModalWindow from './ModalWindow'\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => props.highlight ? '#ffa14d' : '#ececec'};\r\n  border-radius: 4px;\r\n  margin-bottom: 5px;\r\n  padding: 10px;\r\n  position: relative;\r\n`\r\n\r\nconst Title = styled.div`\r\n  color: #000;\r\n  line-height: 30px;\r\n  margin-bottom: 6px;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  min-height: 100px;\r\n`\r\n\r\nconst TextareaCounter = styled.div`\r\n  color: #000;\r\n  font-size: 0.8rem;\r\n  text-align: right;\r\n  margin-right: 8px;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst CornerButton = styled(Button)`\r\n  position: absolute;\r\n  top: 6px;\r\n  right: 10px;\r\n  min-width: 50px;\r\n  text-align: center;\r\n`\r\n\r\nconst RecipeStepPanel = ({no, stepCount, initialValues, onDelete, onUpdate}) => {\r\n    const [modified, setModified] = useState(false)\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false)\r\n    const [text, setText] = useState(initialValues.text)\r\n    const [timer, setTimer] = useState(initialValues.timer)\r\n\r\n    const onSaveChanges = () => {\r\n        onUpdate(no - 1, text, timer)\r\n        setModified(false)\r\n    }\r\n    const onTextChange = e => {\r\n        setText(e.target.value)\r\n        setModified(true)\r\n    }\r\n    const onTimerChange = v => {\r\n        setTimer(v)\r\n        setModified(true)\r\n    }\r\n\r\n    return(\r\n        <Container highlight={modified}>\r\n            <Title>Krok {no} z {stepCount}</Title>\r\n            {!modified && <CornerButton variant={'danger'} size={'sm'} onClick={() => setDeleteModalIsOpen(true)}><FontAwesomeIcon icon={faTrash}/></CornerButton>}\r\n            {modified && <CornerButton variant={'success'} size={'sm'} onClick={onSaveChanges}><FontAwesomeIcon icon={faCheck}/></CornerButton>}\r\n            <Textarea value={text} onChange={onTextChange} maxLength={400} />\r\n            <TextareaCounter>{text.length}/400</TextareaCounter>\r\n            <NumberPicker value={timer}\r\n                          onChange={onTimerChange}\r\n                          step={[1, 10]}\r\n                          maxValue={180}\r\n                          prefix={'Timer: '}\r\n                          label={' min'}\r\n                          zeroCustomText={'Timer wył.'} />\r\n            <ModalWindow show={deleteModalIsOpen}\r\n                         onSubmit={() => onDelete(no - 1)}\r\n                         onCancel={() => setDeleteModalIsOpen(false)}\r\n                         text={'Czy chcesz usunąć ten krok? UWAGA: ta operacja zresetuje wszystkie niezapisane dane z pozostałych kroków!'} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nRecipeStepPanel.propTypes = {\r\n    no: PropTypes.number.isRequired,\r\n    stepCount: PropTypes.number.isRequired,\r\n    initialValues: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default RecipeStepPanel\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport DataLoader from '../components/DataLoader'\r\nimport RecipeStepPanel from '../components/RecipeStepPanel'\r\nimport { getStepsFromRecipe, updateSteps } from '../firebase/firestore/recipes'\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 10px;\r\n  svg { margin: 0 4px; }\r\n`\r\n\r\nconst NewItemButton = styled(Button)`\r\n  margin-top: 10px;\r\n  width: 200px;\r\n`\r\n\r\nconst RecipeEditor = () => {\r\n    const { category, recipe } = useParams()\r\n\r\n    const deleteItem = (idx, data, dataSetter) => {\r\n        const newList = [...data]\r\n        newList.splice(idx, 1)\r\n        dataSetter(newList)\r\n        updateSteps(recipe, newList)\r\n    }\r\n    const addNewItem = (data, dataSetter) => {\r\n        const newList = [...data, { text: '', timer: 0 }]\r\n        dataSetter(newList)\r\n        updateSteps(recipe, newList)\r\n    }\r\n    const updateItem = (idx, text, timer, data, dataSetter) => {\r\n        const newList = [...data]\r\n        newList[idx] = { text, timer }\r\n        dataSetter(newList)\r\n        updateSteps(recipe, newList)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CardTitle leftButton={{ link: `/recipes/${category}/${recipe}`, variant: `light`, icon: faChevronLeft }}>\r\n                Edycja kroków\r\n            </CardTitle>\r\n            <Container>\r\n                <DataLoader noPreventEmptyList\r\n                            loader={() => getStepsFromRecipe(recipe)}\r\n                            viewer={(data, dataSetter) => (\r\n                    <>\r\n                        {\r\n                            data.map((item, idx) => (\r\n                                <RecipeStepPanel key={idx+item.text+item.timer}\r\n                                                 initialValues={item}\r\n                                                 stepCount={data.length}\r\n                                                 no={idx+1}\r\n                                                 onDelete={idx => deleteItem(idx, data, dataSetter)}\r\n                                                 onUpdate={(idx, text, timer) => updateItem(idx, text, timer, data, dataSetter)} />\r\n                            ))\r\n                        }\r\n                        <NewItemButton variant={'success'} onClick={() => addNewItem(data, dataSetter)}>\r\n                            <FontAwesomeIcon icon={faPlusCircle} /> Nowa pozycja\r\n                        </NewItemButton>\r\n                    </>\r\n                )} />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeEditor\r\n","import React from 'react'\r\nimport { getShoppingList } from '../firebase/firestore/shoppingList'\r\nimport firebase from '../firebase/firebase'\r\nimport CardTitle from '../components/CardTitle'\r\nimport DataLoader from '../components/DataLoader'\r\nimport IngredientList from '../components/IngredientList'\r\n\r\nconst ShoppingList = () => {\r\n    const uid = firebase.auth().currentUser.uid\r\n\r\n    return(\r\n        <>\r\n            <CardTitle>Lista zakupów</CardTitle>\r\n            <DataLoader loader={() => getShoppingList(uid)} viewer={data => (\r\n                <>\r\n                    <IngredientList list={data} deleteOption clearOption exportOption manualAdder />\r\n                </>\r\n            )}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShoppingList\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport config from '../config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport DataLoader from '../components/DataLoader'\r\nimport { getAllRecipes } from '../firebase/firestore/recipes'\r\n\r\nconst SearchGroup = styled.div`\r\n  padding: 10px;\r\n  i {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst SearchResultButton = styled(Button)`\r\n  position: relative;\r\n  text-align: left;\r\n  line-height: 40px;\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst ButtonArrowIcon = styled(FontAwesomeIcon)`\r\n  position: absolute;\r\n  right: 20px;\r\n  margin-top: 20px;\r\n  transform: translateY(-50%);\r\n`\r\n\r\nconst getCategoryName = categoryCode => {\r\n    const category = config.categories.find(i => i.code === categoryCode)\r\n    return category ? category.name : ''\r\n}\r\n\r\nconst SearchResultPanels = ({recipes, searchQuery, historyHook}) => {\r\n    searchQuery = searchQuery.toLowerCase()\r\n\r\n    // WARNING:\r\n    // THIS SEARCH ENGINE CONTAINS BAD PRACTISE WITH CLIENT-SIDE FILTERING BECAUSE FIRESTORE\r\n    // DOESN'T SUPPORT NATIVE FULL-TEXT SEARCHING - DOING IT PROPERLY REQUIRES USING EXTERNAL\r\n    // SEARCH ENGINE LIKE ALGOLIA BUT I DON'T WANT COMPLICATE TO MUCH THIS SIMPLE PROJECT\r\n\r\n    const filteredRecipes = recipes\r\n        .filter(i => i.name.toLowerCase().includes(searchQuery)).map(recipe => (\r\n        <SearchResultButton key={recipe.id}\r\n                            variant={'light'}\r\n                            block\r\n                            onClick={() => historyHook.push(`/recipes/${recipe.category}/${recipe.id}`)}>\r\n            {getCategoryName(recipe.category)}: {recipe.name}\r\n            <ButtonArrowIcon icon={faChevronRight} />\r\n        </SearchResultButton>\r\n    ))\r\n    if(filteredRecipes.length === 0) {\r\n        return <i>nie znaleziono przepisów o takiej nazwie</i>\r\n    }else{\r\n        return filteredRecipes\r\n    }\r\n}\r\n\r\nconst Search = () => {\r\n    const [searchText, setSearchText] = useState('')\r\n    const history = useHistory()\r\n\r\n    return(\r\n        <>\r\n            <CardTitle>Wyszukiwarka</CardTitle>\r\n            <SearchGroup>\r\n                <Form.Control type={'text'}\r\n                              value={searchText}\r\n                              onChange={e => setSearchText(e.target.value)} placeholder={'Wpisz szukaną frazę (min. 3 znaki)'}\r\n                              maxLength={'30'} />\r\n            </SearchGroup>\r\n            <SearchGroup>\r\n                <DataLoader noPreventEmptyList loader={getAllRecipes} viewer={data => (\r\n                    searchText.length > 3 && <SearchResultPanels searchQuery={searchText} recipes={data} historyHook={history} />\r\n                )} />\r\n            </SearchGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from 'react'\r\nimport { Button, Dropdown, Form, InputGroup } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport config from '../config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport CardTitle from '../components/CardTitle'\r\nimport ModalWindow from '../components/ModalWindow'\r\nimport { getIngredients, deleteIngredient, addIngredient } from '../firebase/firestore/ingredients'\r\nimport DataLoader from '../components/DataLoader'\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nconst ItemButton = styled(Button)`\r\n  position: relative;\r\n  text-align: left;\r\n  line-height: 40px;\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst TrashIcon = styled(FontAwesomeIcon)`\r\n  position: absolute;\r\n  right: 20px;\r\n  margin-top: 20px;\r\n  transform: translateY(-50%);\r\n`\r\n\r\nconst IngredientAdder = ({ onSubmit }) => {\r\n    const [name, setName] = useState('')\r\n    const [dropdownIsOpen, setDropdownIsOpen] = useState(false)\r\n    const [unitType, setUnitType] = useState(config.ingredientUtils[0].code)\r\n    const adder = () => {\r\n        addIngredient(name, unitType)\r\n            .then(() => {\r\n                setName('')\r\n                setUnitType(config.ingredientUtils[0].code)\r\n                if(onSubmit) onSubmit()\r\n            })\r\n    }\r\n    return(\r\n        <Container>\r\n            <InputGroup style={{marginBottom: '10px'}}>\r\n                <Form.Control type={'text'}\r\n                              value={name}\r\n                              onChange={e => setName(e.target.value)} placeholder={'Nazwa składnika'}\r\n                              maxLength={'30'} />\r\n                <InputGroup.Append>\r\n                    <Button variant={'success'}\r\n                         onClick={adder}\r\n                         disabled={name.length < 3}>\r\n                        Dodaj\r\n                    </Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n            <Dropdown isOpen={dropdownIsOpen} toggle={() => setDropdownIsOpen(v => !v)}>\r\n                <Dropdown.Toggle variant={'light'} caret block>\r\n                    Jednostka: {config.ingredientUtils.find(unit => unit.code === unitType).name}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {\r\n                        config.ingredientUtils.map(unit => (\r\n                            <Dropdown.Item key={unit.code}\r\n                                           onClick={() => setUnitType(unit.code)}\r\n                                           disabled={unit.code === unitType}>\r\n                                {unit.name}\r\n                            </Dropdown.Item>\r\n                        ))\r\n                    }\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst IngredientBrowser = () => {\r\n    const [selectedId, setSelectedId] = useState(null)\r\n    const [refreshFlag, setRefreshFlag] = useState(false)\r\n    const deleteItem = () => {\r\n        deleteIngredient(selectedId)\r\n            .then(() => {\r\n                setSelectedId(null)\r\n                setRefreshFlag(f => !f)\r\n            })\r\n    }\r\n    return(\r\n        <>\r\n            <CardTitle>Składniki</CardTitle>\r\n            <IngredientAdder onSubmit={() => setRefreshFlag(f => !f)} />\r\n            <DataLoader refreshFlag={refreshFlag} loader={getIngredients} viewer={data => (\r\n                <Container>\r\n                    {\r\n                        data.map(item => (\r\n                            <ItemButton key={item.id}\r\n                                        variant={'light'}\r\n                                        block\r\n                                        onClick={() => setSelectedId(item.id)}>\r\n                                {item.name} [{config.ingredientUtils.find(unit => unit.code === item.unit).name}]\r\n                                <TrashIcon icon={faTrash} style={{color: '#d00000'}} />\r\n                            </ItemButton>\r\n                        ))\r\n                    }\r\n                </Container>\r\n            )} />\r\n            <ModalWindow show={selectedId != null}\r\n                         onSubmit={deleteItem}\r\n                         onCancel={() => setSelectedId(null)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IngredientBrowser\r\n","import firebase from '../firebase'\r\n\r\nconst RECIPES_COLL = 'recipes'\r\nconst INGREDIENTS_COLL = 'ingredients'\r\nconst SHOPPING_LIST_COLL = 'shoppingList'\r\n\r\nconst exportDataFromCollection = (collectionName, docName = '') => {\r\n    if(docName === '') {\r\n        return firebase.firestore().collection(collectionName).get()\r\n            .then(collection => (\r\n                JSON.stringify(collection.docs.map(doc => ({ id: doc.id, data: doc.data() })))\r\n            ))\r\n            .catch(err => alert(`EXPORT ERROR ${err.code}`))\r\n    }else{\r\n        return firebase.firestore().collection(collectionName).doc(docName).get()\r\n            .then(doc => (\r\n                JSON.stringify({ id: doc.id, data: doc.data() })\r\n            ))\r\n            .catch(err => alert(`EXPORT ERROR ${err.code}`))\r\n    }\r\n}\r\n\r\nexport const exportRecipes = () => exportDataFromCollection(RECIPES_COLL)\r\n\r\nexport const exportIngredients = () => exportDataFromCollection(INGREDIENTS_COLL)\r\n\r\nexport const exportShopingList = uid => exportDataFromCollection(SHOPPING_LIST_COLL, uid)\r\n","import React, {useContext, useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {Button} from 'react-bootstrap'\r\nimport firebase from 'firebase'\r\nimport {UserContext} from '../firebase/UserContext'\r\nimport {\r\n    exportRecipes,\r\n    exportIngredients,\r\n    exportShopingList\r\n} from '../firebase/firestore/databaseExports'\r\n\r\nconst Panel = styled.div`\r\n  text-align: center;\r\n  margin: 50px 20px 0 20px;\r\n`\r\n\r\nconst Btn = styled(Button)`\r\nmargin-top: 25px;\r\n`\r\n\r\nconst logout = () => {\r\n    firebase.auth().signOut().catch(err => alert(`AUTH ERROR: ${err}`))\r\n}\r\n\r\nconst ProfilePage = () => {\r\n    const user = useContext(UserContext)\r\n    const [exportData, setExportData] = useState(null)\r\n    const [fetchingInProgress, setFetchingInProgress] = useState(false)\r\n    const [fileName, setFileName] = useState('exportdata')\r\n    const fetchData = typeID => {\r\n        setExportData(null)\r\n        setFetchingInProgress(true)\r\n        switch (typeID) {\r\n            case 'RECIPES':\r\n                setFileName('RecipesDataExport')\r\n                exportRecipes().then(data => setExportData(data))\r\n                break\r\n            case 'INGREDIENTS':\r\n                setFileName('IngredientsDataExport')\r\n                exportIngredients().then(data => setExportData(data))\r\n                break\r\n            case 'SHOPINGLIST':\r\n                setFileName('ShopingListDataExport')\r\n                exportShopingList(user.uid).then(data => setExportData(data))\r\n                break\r\n            default:\r\n                setFileName('exportdata')\r\n                setExportData(null)\r\n        }\r\n    }\r\n\r\n    const clickExportRecipes = () => fetchData('RECIPES')\r\n    const clickExportIngredients = () => fetchData('INGREDIENTS')\r\n    const clickExportShopingList = () => fetchData('SHOPINGLIST')\r\n\r\n    const downloadExportData = () => {\r\n        const data = 'data:text/json;charset=utf-8,' + encodeURIComponent(exportData.toString())\r\n        const downloadAnchorNode = document.createElement('a')\r\n        downloadAnchorNode.setAttribute('href', data)\r\n        downloadAnchorNode.setAttribute('download', `${fileName}.json`);\r\n        document.body.appendChild(downloadAnchorNode)\r\n        downloadAnchorNode.click()\r\n        downloadAnchorNode.remove()\r\n        setExportData(null)\r\n        setFetchingInProgress(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Panel>\r\n                <b>Zalogowano jako:</b><br />{user.displayName}<br/>{user.email}\r\n                <Btn variant={'danger'} block onClick={logout}>Wyloguj z systemu</Btn>\r\n            </Panel>\r\n            <Panel>\r\n                <Btn variant={'light'} block onClick={clickExportRecipes}>Eksportuj przepisy</Btn>\r\n                <Btn variant={'light'} block onClick={clickExportIngredients}>Eksportuj składniki</Btn>\r\n                <Btn variant={'light'} block onClick={clickExportShopingList}>Eksportuj listę zakupów</Btn>\r\n                {\r\n                    fetchingInProgress\r\n                    &&\r\n                    <Btn variant={'warning'}\r\n                         block\r\n                         onClick={downloadExportData}\r\n                         style={{marginTop: '20px'}}\r\n                         disabled={exportData === null}>\r\n                        {exportData === null ? 'Pobieranie...' : 'Pobierz plik z danymi'}\r\n                    </Btn>\r\n                }\r\n            </Panel>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n","import CategoryBrowser from './views/CategoryBrowser'\r\nimport RecipeBrowser from './views/RecipeBrowser'\r\nimport RecipePreview from './views/RecipePreview'\r\nimport Cooking from './views/Cooking'\r\nimport RecipeEditor from './views/RecipeEditor'\r\nimport IngredientEditor from './views/IngredientEditor'\r\nimport StepEditor from './views/StepEditor'\r\nimport ShoppingList from './views/ShoppingList'\r\nimport Search from './views/Search'\r\nimport IngredientBrowser from './views/IngredientBrowser'\r\nimport ProfilePage from './views/ProfilePage'\r\n\r\nexport default [\r\n    { path: '/recipes', exact: true, name: 'Kategorie przepisów', component: CategoryBrowser },\r\n    { path: '/recipes/:category', exact: true, name: 'Przepisy', component: RecipeBrowser },\r\n    { path: '/recipes/:category/add', exact: true, name: 'Nowy przepis', component: RecipeEditor },\r\n    { path: '/recipes/:category/:recipe', exact: true, name: 'Podgląd przepisu', component: RecipePreview },\r\n    { path: '/recipes/:category/:recipe/cooking', exact: true, name: 'Tryb gotowania', component: Cooking },\r\n    { path: '/recipes/:category/:recipe/edit-recipe', exact: true, name: 'Edycja przepisu', component: RecipeEditor },\r\n    { path: '/recipes/:category/:recipe/edit-ingredients', exact: true, name: 'Edycja składników przepisu', component: IngredientEditor },\r\n    { path: '/recipes/:category/:recipe/edit-steps', exact: true, name: 'Edycja kroków przepisu', component: StepEditor },\r\n    { path: '/search', exact: true, name: 'Lista zakupów', component: Search },\r\n    { path: '/shoping-list', exact: true, name: 'Lista zakupów', component: ShoppingList },\r\n    { path: '/ingredients', exact: true, name: 'Składniki', component: IngredientBrowser },\r\n    { path: '/profile', exact: true, name: 'Profil', component: ProfilePage },\r\n]\r\n","import React, {useContext} from 'react'\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\n import LoginPage from './views/LoginPage'\n import Layout from './components/Layout'\n import routes from './routes'\nimport {UserContext} from './firebase/UserContext'\n\nconst PrivateRoute = () => {\n    const authorized = useContext(UserContext)\n    if(authorized) {\n        return (\n            <Layout>\n              <Switch>\n                {\n                  routes.map((route, idx) => (\n                      <Route key={idx}\n                             path={route.path}\n                             exact={route.exact}\n                             name={route.name}\n                             render={props => (\n                                 <route.component {...props} />\n                             )} />\n                  ))\n                }\n              </Switch>\n            </Layout>\n        )\n    }else{\n        return (\n            <Redirect to={'/'}/>\n        )\n    }\n}\n\nconst App = () => (\n    <HashRouter>\n      <React.Suspense fallback={() => <span>Loading...</span>}>\n        <Switch>\n          <Route exact path=\"/\" name=\"Login Page\" render={props => <LoginPage {...props} />} />\n          <PrivateRoute/>\n        </Switch>\n      </React.Suspense>\n    </HashRouter>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport UserProvider from './firebase/UserContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n        <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}