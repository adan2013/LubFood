{"version":3,"sources":["firebase/firebase.js","firebase/authorizationProgressFlag.js","firebase/UserContext.js","lubfoodlogo.png","views/LoginPage.js","components/NavMenu.js","components/Layout.js","config.js","components/CardTitle.js","views/CategoryBrowser.js","firebase/firestore/recipes.js","components/DataLoader.js","views/RecipeBrowser.js","components/ModalWindow.js","firebase/firestore/shoppingList.js","utils/getUnitName.js","components/IngredientList.js","views/RecipePreview.js","hooks/useTimer.js","components/CookingPopupPanel.js","views/Cooking.js","components/NumberPicker.js","views/RecipeEditor.js","components/RecipeIngredientPanel.js","utils/getUnitConfig.js","firebase/firestore/ingredients.js","utils/cloneObject.js","views/IngredientEditor.js","components/RecipeStepPanel.js","views/StepEditor.js","views/ShoppingList.js","utils/getCategoryName.js","views/Search.js","views/IngredientBrowser.js","firebase/firestore/databaseExports.js","views/ProfilePage.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","KEY_NAME","authorizationStart","window","localStorage","setItem","Date","toString","authorizationEnd","removeItem","UserContext","createContext","user","UserProvider","state","componentDidMount","auth","onAuthStateChanged","userAuth","setState","Provider","value","this","props","children","Component","LoginForm","styled","div","LubFoodLogo","KeyIcon","FontAwesomeIcon","LoginButton","Button","ProgressLabel","AbortButton","signInWithGoogle","provider","GoogleAuthProvider","signInWithRedirect","catch","err","alert","LoginPage","authorized","useContext","authInProgress","getItem","to","src","logo","alt","variant","size","onClick","icon","faKey","items","faUtensils","name","path","faShoppingCart","faSearch","faCarrot","faUser","NavContainer","NavItem","Link","NavMenu","location","useLocation","map","item","className","pathname","indexOf","Container","Content","Layout","showMenu","href","includes","categories","code","ingredientUtils","label","min","max","step","Btn","onRight","SideButton","buttonObj","push","useHistory","link","defaultProps","CardTitle","leftButton","rightButton","ButtonGroup","CategoryButton","CategoryArrowIcon","CategoryBrowser","history","config","category","block","faChevronRight","RECIPES_COLL","STEPS_FIELD","INGREDIENTS_FIELD","getRecipe","recipeId","firestore","collection","doc","get","then","exists","data","getAllRecipes","docs","forEach","recipe","id","getRecipeField","fieldName","updateRecipeField","update","updateSteps","stepArray","updateIngredients","ingredientArray","DataLoader","viewer","loader","refreshFlag","noPreventEmptyList","useState","setData","useEffect","resp","Array","isArray","length","RecipeButton","RecipeBrowser","useParams","faChevronLeft","faPlusCircle","find","c","categoryCode","sortData","where","sort","a","b","getRecipesFromCategory","ModalWindow","show","onCancel","onSubmit","title","text","Modal","onHide","Header","closeButton","Title","Body","Footer","SHOPPING_LIST_COLL","addToShoppingList","uid","obj","set","list","FieldValue","arrayUnion","merge","unitCode","unit","i","ListContainer","ItemContainer","lineThrough","ItemButton","MainOptionContainer","ManualAdder","InputGroup","ListItem","itemAdded","addOption","deleteOption","actionExecuted","setActionExecuted","currentUser","disabled","faCheck","arrayRemove","deleteFromShoppingList","faTrash","IngredientList","getUnitName","convertObjects","setList","itemsAdded","setItemsAdded","deleteModalIsOpen","setDeleteModalIsOpen","dataCopied","setDataCopied","customItem","setCustomItem","addAllOption","clearOption","exportOption","copy","join","setTimeout","faClipboard","manualAdder","Form","Control","type","onChange","e","target","placeholder","maxLength","Append","clearShoppingList","RecipeTitleContainer","TimerContainer","SingleTimerContainer","FooterButton","DifficultMeter","level","solidFaStar","regularFaStar","TimeDisplay","minutes","description","h","Math","floor","m","RecipePreview","steps","faPlayCircle","difficult","preparationTime","cookingTime","ingredients","delete","useTimer","onTimeOver","isRunning","startTime","initialTime","timeLeft","lastSetTimeValue","status","setStatus","intervalRef","useRef","current","stopService","getTime","clearInterval","undefined","play","setInterval","pause","resetTime","autoPause","setTime","newTime","autoStart","PopupMainContainer","hide","PopupContainer","CenterText","generateTimerString","s","CookingPopupPanel","popupMode","stepTimerValue","fontSize","onFontSizeChange","faPause","faPlay","faUndo","faMinus","faPlus","TextContainer","ControlButtonMainContainer","ControlButtonRowContainer","ControlButtonStyle","ControlButton","Cooking","ingredientMode","setIngredientMode","setPopupMode","setFontSize","stepNumber","setStepNumber","exitModalIsOpen","setExitModalIsOpen","switchToPrevStep","v","switchToNextStep","switchPopup","popupId","idx","timer","faClock","faSearchPlus","faTimes","NumberPicker","minValue","maxValue","prefix","zeroCustomText","val","setVal","updateValue","diff","newValue","round","Prepend","slice","reverse","style","textAlign","readOnly","SectionTitle","FooterMessage","RecipeEditor","setName","setDifficult","setPreparationTime","setCookingTime","currentData","downText","upText","marginTop","updateRecipe","add","res","addRecipe","highlight","CornerButton","DropdownSelector","select","IngredientSelector","dictionary","RecipeIngredientPanel","no","initialValues","onDelete","onUpdate","modified","setModified","ingredientId","setIngredientId","setValue","unitConfig","uc","getUnitConfig","getIngredient","INGREDIENTS_COLL","getIngredients","getIngredientsFromSystemAndRecipe","fromRecipe","getIngredientsFromRecipe","fromSystem","Promise","all","JSON","parse","stringify","NewItemButton","IngredientEditor","dataSetter","newList","cloneObject","splice","deleteItem","ingredient","updateItem","addNewItem","Textarea","textarea","TextareaCounter","RecipeStepPanel","stepCount","setText","setTimer","ShoppingList","getShoppingList","SearchGroup","SearchResultButton","ButtonArrowIcon","SearchResultPanels","recipes","searchQuery","historyHook","toLowerCase","filteredRecipes","filter","getCategoryName","Search","searchText","setSearchText","TrashIcon","IngredientAdder","dropdownIsOpen","setDropdownIsOpen","unitType","setUnitType","Dropdown","isOpen","toggle","Toggle","caret","Menu","Item","addIngredient","IngredientBrowser","selectedId","setSelectedId","setRefreshFlag","f","color","exportDataFromCollection","collectionName","docName","Panel","StyledButton","logout","signOut","exact","component","StepEditor","exportData","setExportData","fetchingInProgress","setFetchingInProgress","fileName","setFileName","fetchData","typeID","displayName","email","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","PrivateRoute","routes","route","render","App","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9fb5b95f.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDRdHmJADtfgGpVkNCP55h1jbYkMUDY1GM\",\r\n    authDomain: \"lubfoodgh.firebaseapp.com\",\r\n    projectId: \"lubfoodgh\",\r\n    storageBucket: \"lubfoodgh.appspot.com\",\r\n    messagingSenderId: \"719043369683\",\r\n    appId: \"1:719043369683:web:6b35ccb6f9d50abebad226\"\r\n}\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase\r\n","const KEY_NAME = 'authenticatedWithFirebase'\r\n\r\nexport const authorizationIsInProgress = () => window.localStorage.getItem(KEY_NAME) !== null\r\n\r\nexport const authorizationStart = () => window.localStorage.setItem(KEY_NAME, new Date().toString())\r\n\r\nexport const authorizationEnd = () => window.localStorage.removeItem(KEY_NAME)\r\n","import React, { Component, createContext } from 'react'\r\nimport firebase from './firebase'\r\nimport PropTypes from 'prop-types'\r\nimport { authorizationStart, authorizationEnd } from './authorizationProgressFlag'\r\n\r\nexport const UserContext = createContext({ user: null })\r\n\r\nclass UserProvider extends Component {\r\n    state = {\r\n        user: null\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(userAuth => {\r\n            if(userAuth) {\r\n                authorizationStart()\r\n                this.setState({ user: userAuth })\r\n                // OPTIONAL DATABASE WHITELIST CHECK (DISABLED IN THIS PROJECT)\r\n                // firebase.firestore().collection('whitelist').get()\r\n                //     .then(() => {\r\n                //         authorizationStart()\r\n                //         this.setState({ user: userAuth })\r\n                //     })\r\n                //     .catch(() => {\r\n                //         authorizationEnd()\r\n                //         alert('PERMISSION DENIED!')\r\n                //         this.setState({ user: null })\r\n                //     })\r\n            }else{\r\n                authorizationEnd()\r\n                this.setState({ user: null })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <UserContext.Provider value={this.state.user}>\r\n                {this.props.children}\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nUserProvider.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default UserProvider\r\n","export default __webpack_public_path__ + \"static/media/lubfoodlogo.00dc66c1.png\";","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faKey } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button } from 'react-bootstrap'\r\nimport firebase from 'firebase'\r\nimport { UserContext } from '../firebase/UserContext'\r\nimport { Redirect } from 'react-router'\r\nimport logo from '../lubfoodlogo.png'\r\nimport { authorizationIsInProgress, authorizationStart } from '../firebase/authorizationProgressFlag'\r\n\r\nconst LoginForm = styled.div`\r\n    background-color: #393e46;\r\n    width: 100vw;\r\n    max-width: 800px;\r\n    height: 100vh;\r\n    text-align: center;\r\n    padding: 80px 50px 0 50px;\r\n    box-shadow: 0 0 30px 6px rgba(0,0,0,0.75);\r\n`\r\n\r\nconst LubFoodLogo = styled.div`\r\n    margin-bottom: 30px;\r\n  \r\n    img {\r\n        max-width: 80%;\r\n    }\r\n`\r\n\r\nconst KeyIcon = styled(FontAwesomeIcon)`\r\n    margin-right: 14px;\r\n`\r\n\r\nconst LoginButton = styled(Button)`\r\n    padding: 10px 20px;\r\n`\r\n\r\nconst ProgressLabel = styled.div`\r\n    color: #fff;\r\n    font-size: 20px;\r\n    animation: pulse 0.5s infinite;\r\n    animation-direction: alternate;\r\n\r\n    @keyframes pulse {\r\n        0% { color: rgba(255, 255, 255, 1) }\r\n        100% { color: rgba(255, 255, 255, 0.2) }\r\n    }\r\n`\r\n\r\nconst AbortButton = styled(Button)`\r\n    padding: 4px 20px;\r\n    position: fixed;\r\n    bottom: 10px;\r\n    transform: translateX(-50%);\r\n`\r\n\r\nconst signInWithGoogle = () => {\r\n    authorizationStart()\r\n    const provider = new firebase.auth.GoogleAuthProvider()\r\n    firebase.auth().signInWithRedirect(provider)\r\n        .catch(err => alert(`AUTH ERROR: ${err}`))\r\n}\r\n\r\nconst LoginPage = () => {\r\n    const authorized = useContext(UserContext)\r\n    const authInProgress = authorizationIsInProgress()\r\n\r\n    if(authorized) {\r\n        return (<Redirect to={'/recipes'}/>)\r\n    }else{\r\n        return (\r\n            <LoginForm>\r\n                <LubFoodLogo><img src={logo} alt={'lubfood logo'} /></LubFoodLogo>\r\n                {\r\n                    authInProgress\r\n                    ?\r\n                        <>\r\n                            <ProgressLabel>Logowanie w toku...</ProgressLabel>\r\n                            <AbortButton variant={'danger'} size={'sm'} onClick={signInWithGoogle}>\r\n                                Spróbuj ponownie\r\n                            </AbortButton>\r\n                        </>\r\n                        :\r\n                        <LoginButton variant={'light'} onClick={signInWithGoogle}>\r\n                            <KeyIcon icon={faKey}/>Zaloguj do systemu\r\n                        </LoginButton>\r\n                }\r\n            </LoginForm>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUtensils, faShoppingCart, faSearch, faCarrot, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst items = [\r\n    { icon: faUtensils, name: 'Przepisy', path: '/recipes' },\r\n    { icon: faShoppingCart, name: 'Zakupy', path: '/shoping-list' },\r\n    { icon: faSearch, name: 'Szukaj', path: '/search' },\r\n    { icon: faCarrot, name: 'Składniki', path: '/ingredients' },\r\n    { icon: faUser, name: 'Profil', path: '/profile' }\r\n]\r\n\r\nconst NavContainer = styled.div`\r\n    width: 100%;\r\n    max-width: 800px;\r\n    position: fixed;\r\n    bottom: 0;\r\n    background-color: #2868ac;\r\n    height: 70px;\r\n    display: flex;\r\n    border-top: 1px #222020 solid;\r\n    z-index: 9999;\r\n`\r\n\r\nconst NavItem = styled(Link)`\r\n    flex: 1;\r\n    color: #fff;\r\n    padding: 14px 2px 5px 2px;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    font-size: 12px;\r\n\r\n    &.active {\r\n        background-color: #0c0c0c;\r\n    }\r\n    \r\n    &:hover {\r\n        background-color: #0c0c0c;\r\n        text-decoration: none;\r\n        color: #fff;\r\n    }\r\n    \r\n    .menu-icon {\r\n        font-size: 22px;\r\n        display: block;\r\n        margin: 0 auto 4px auto;\r\n    }\r\n`\r\n\r\nconst NavMenu = () => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <NavContainer>\r\n            {\r\n                items.map(item => (\r\n                    <NavItem key={item.name}\r\n                             to={item.path}\r\n                             className={location.pathname.indexOf(item.path) >= 0 && 'active'}>\r\n                        <FontAwesomeIcon className={'menu-icon'} icon={item.icon}/>\r\n                        {item.name}\r\n                    </NavItem>\r\n                ))\r\n            }\r\n        </NavContainer>\r\n    )\r\n}\r\n\r\nexport default NavMenu\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport NavMenu from './NavMenu'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = styled.div`\r\n    background-color: #3589e3;\r\n    width: 100%;\r\n    height: 100vh;\r\n`\r\n\r\nconst Content = styled.div`\r\n    background-color: #3589e3;\r\n    color: #fff;\r\n    min-height: 100%;\r\n    padding: 5px 5px 90px 5px;\r\n    box-shadow: 0 0 30px 6px rgba(0, 0, 0, 0.75);\r\n`\r\n\r\nconst Layout = (props) => {\r\n    const showMenu = !window.location.href.includes('/cooking')\r\n\r\n    return (\r\n        <Container>\r\n            <Content>{props.children}</Content>\r\n            {showMenu && <NavMenu/>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default Layout\r\n","export default {\r\n    categories: [\r\n        { code: 'cakes', name: 'Ciasta' },\r\n        { code: 'maindishes', name: 'Dania główne' },\r\n        { code: 'desserts', name: 'Desery' },\r\n        { code: 'drinks', name: 'Napoje' },\r\n        { code: 'snacks', name: 'Przekąski' },\r\n        { code: 'soups', name: 'Zupy' },\r\n    ],\r\n    ingredientUtils: [\r\n        { code: 'UNKNOW', name: 'Dowolna', label: '', min: 0, max: 0, step: null },\r\n        { code: 'QUANTITY', name: 'Sztuki', label: ' szt.', min: 0, max: 20, step: [0.25, 1] },\r\n        { code: 'ML', name: 'Mililitry', label: ' ml', min: 0, max: 3000, step: [10, 100] },\r\n        { code: 'GLASS', name: 'Szklanki', label: ' szklanki', min: 0, max: 10, step: [0.25, 1] },\r\n        { code: 'KG', name: 'Kilogramy', label: ' kg', min: 0, max: 10, step: [0.1, 0.5] },\r\n        { code: 'G', name: 'Gramy', label: ' g', min: 0, max: 5000, step: [10, 100] },\r\n        { code: 'SPOON', name: 'Łyżka', label: ' łyżki', min: 0, max: 10, step: [0.25, 1] },\r\n        { code: 'TEASPOON', name: 'Łyżeczka', label: ' łyżeczki', min: 0, max: 10, step: [0.5, 1] },\r\n    ],\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    text-align: center;\r\n    margin: 10px auto;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Btn = styled(Button)`\r\n    position: absolute;\r\n    min-width: 60px;\r\n    left: ${props => props.onRight ? 'inherit' : '10px'};\r\n    right: ${props => props.onRight ? '10px' : 'inherit'};\r\n`\r\n\r\nconst SideButton = ({ onRight, buttonObj }) => {\r\n    const { push } = useHistory()\r\n    if(buttonObj) {\r\n        return(\r\n            <Btn variant={buttonObj.variant} onRight={onRight} onClick={() => push(buttonObj.link)}>\r\n                <FontAwesomeIcon icon={buttonObj.icon}/>\r\n            </Btn>\r\n        )\r\n    }else{\r\n        return <></>\r\n    }\r\n}\r\n\r\nSideButton.propTypes = {\r\n    onRight: PropTypes.bool,\r\n    buttonObj: PropTypes.object\r\n}\r\n\r\nSideButton.defaultProps = {\r\n    onRight: false\r\n}\r\n\r\nconst CardTitle = ({children, leftButton, rightButton}) => (\r\n    <Container>\r\n        <SideButton buttonObj={leftButton}/>\r\n        {children}\r\n        <SideButton onRight buttonObj={rightButton}/>\r\n    </Container>\r\n)\r\n\r\nCardTitle.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    leftButton: PropTypes.object,\r\n    rightButton: PropTypes.object,\r\n}\r\n\r\nexport default CardTitle\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport config from '../config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\n\r\nconst ButtonGroup = styled.div`\r\n    padding: 10px;\r\n`\r\n\r\nconst CategoryButton = styled(Button)`\r\n    position: relative;\r\n    text-align: left;\r\n    line-height: 40px;\r\n    margin-bottom: 12px;\r\n`\r\n\r\nconst CategoryArrowIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    right: 20px;\r\n    margin-top: 20px;\r\n    transform: translateY(-50%);\r\n`\r\n\r\nconst CategoryBrowser = () => {\r\n    const history = useHistory()\r\n\r\n    return(\r\n        <>\r\n            <CardTitle>Wybierz kategorię</CardTitle>\r\n            <ButtonGroup>\r\n                {\r\n                    config.categories.map(category => (\r\n                        <CategoryButton key={category.code}\r\n                                        variant={'light'}\r\n                                        block\r\n                                        onClick={() => history.push(`/recipes/${category.code}`)}>\r\n                            {category.name}\r\n                            <CategoryArrowIcon icon={faChevronRight} />\r\n                        </CategoryButton>\r\n                    ))\r\n                }\r\n            </ButtonGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryBrowser\r\n","import firebase from '../firebase'\r\n\r\nconst RECIPES_COLL = 'recipes'\r\nconst STEPS_FIELD = 'steps'\r\nconst INGREDIENTS_FIELD = 'ingredients'\r\n\r\n// RECIPES\r\nexport const getRecipesFromCategory = (categoryCode, sortData = true) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).where('category', '==', categoryCode).get()\r\n        .then(docs => {\r\n            let data = []\r\n            docs.forEach(recipe => {\r\n                data.push({ id: recipe.id, ...recipe.data() })\r\n            })\r\n            if(sortData) {\r\n                data = data.sort((a, b) => {\r\n                    if(a.name < b.name) return -1\r\n                    if(a.name > b.name) return 1\r\n                    return 0\r\n                })\r\n            }\r\n            return data\r\n        })\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const getRecipe = recipeId => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).get()\r\n        .then(doc => (doc.exists ? doc.data() : []))\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const getAllRecipes = () => {\r\n    return firebase.firestore().collection(RECIPES_COLL).get()\r\n        .then(docs => {\r\n            let data = []\r\n            docs.forEach(recipe => { data.push({ id: recipe.id, ...recipe.data() }) })\r\n            return data\r\n        })\r\n        .catch(err => alert(`SEARCH ERROR ${err.code}`))\r\n}\r\n\r\nexport const deleteRecipe = recipeId => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).delete()\r\n        .catch(err => alert(`DELETE ERROR ${err.code}`))\r\n}\r\n\r\nexport const addRecipe = (category, name, difficult, preparationTime, cookingTime) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).add({\r\n        category, name, difficult, preparationTime, cookingTime, [STEPS_FIELD]: [], [INGREDIENTS_FIELD]: []\r\n    })\r\n        .then(res => res.id)\r\n        .catch(err => alert(`ADD ERROR ${err.code}`))\r\n}\r\n\r\nexport const updateRecipe = (recipeId, name, difficult, preparationTime, cookingTime) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).update({\r\n        name, difficult, preparationTime, cookingTime\r\n    })\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n\r\nexport const getRecipeField = (recipeId, fieldName) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).get()\r\n        .then(recipe => recipe.data()[fieldName])\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const updateRecipeField = (recipeId, fieldName, data) => {\r\n    return firebase.firestore().collection(RECIPES_COLL).doc(recipeId).update({\r\n        [fieldName]: data\r\n    })\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n\r\n// STEPS\r\nexport const getStepsFromRecipe = recipeId => getRecipeField(recipeId, STEPS_FIELD)\r\n\r\nexport const updateSteps = (recipeId, stepArray) => updateRecipeField(recipeId, STEPS_FIELD, stepArray)\r\n\r\n// INGREDIENTS\r\nexport const getIngredientsFromRecipe = recipeId => getRecipeField(recipeId, INGREDIENTS_FIELD)\r\n\r\nexport const updateIngredients = (recipeId, ingredientArray) => updateRecipeField(recipeId, INGREDIENTS_FIELD, ingredientArray)\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    margin: 15px auto;\r\n    font-size: 18px;\r\n    font-style: italic;\r\n`\r\n\r\nconst DataLoader = ({viewer, loader, refreshFlag, noPreventEmptyList}) => {\r\n    const [data, setData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        loader().then(resp => setData(resp))\r\n    }, [loader, refreshFlag])\r\n\r\n    if(data) {\r\n        if(!noPreventEmptyList && Array.isArray(data) && data.length === 0) {\r\n            return(<Container>Lista jest pusta</Container>)\r\n        }else{\r\n            return(viewer(data, setData))\r\n        }\r\n    }else{\r\n        return(<Container>Ładowanie...</Container>)\r\n    }\r\n}\r\n\r\nDataLoader.propTypes = {\r\n    viewer: PropTypes.func.isRequired,\r\n    loader: PropTypes.func.isRequired,\r\n    refreshFlag: PropTypes.bool,\r\n    noPreventEmptyList: PropTypes.bool,\r\n}\r\n\r\nDataLoader.defaultProps = {\r\n    refreshFlag: false,\r\n    noPreventEmptyList: false,\r\n}\r\n\r\nexport default DataLoader\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport config from '../config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight, faChevronLeft, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport { getRecipesFromCategory } from '../firebase/firestore/recipes'\r\nimport DataLoader from '../components/DataLoader'\r\n\r\nconst ButtonGroup = styled.div`\r\n    padding: 10px;\r\n`\r\n\r\nconst RecipeButton = styled(Button)`\r\n    position: relative;\r\n    text-align: left;\r\n    line-height: 40px;\r\n    margin-bottom: 12px;\r\n`\r\n\r\nconst CategoryArrowIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    right: 20px;\r\n    margin-top: 20px;\r\n    transform: translateY(-50%);\r\n`\r\n\r\nconst RecipeBrowser = () => {\r\n    const history = useHistory()\r\n    const { category } = useParams()\r\n\r\n    return(\r\n        <>\r\n            <CardTitle leftButton={{ link: `/recipes`, variant: `light`, icon: faChevronLeft }}\r\n                       rightButton={{ link: `/recipes/${category}/add`, variant: `success`, icon: faPlusCircle }}>\r\n                {config.categories.find(c => c.code === category).name}\r\n            </CardTitle>\r\n            <DataLoader loader={() => getRecipesFromCategory(category)}\r\n                        viewer={data => (\r\n                            <ButtonGroup>\r\n                                {\r\n                                    data.map(recipe => (\r\n                                        <RecipeButton key={recipe.id}\r\n                                                        variant={'light'}\r\n                                                        block\r\n                                                        onClick={() => history.push(`/recipes/${category}/${recipe.id}`)}>\r\n                                            {recipe.name}\r\n                                            <CategoryArrowIcon icon={faChevronRight} />\r\n                                        </RecipeButton>\r\n                                    ))\r\n                                }\r\n                            </ButtonGroup>\r\n                        )}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeBrowser\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nconst ModalWindow = ({ show, onCancel, onSubmit, title, text }) => (\r\n    <Modal show={show} onHide={onCancel}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            {text}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={onCancel}>Anuluj</Button>\r\n            <Button variant=\"danger\" onClick={onSubmit}>Potwierdź</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n)\r\n\r\nModalWindow.propTypes = {\r\n    show: PropTypes.bool,\r\n    onCancel: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string,\r\n}\r\n\r\nModalWindow.defaultProps = {\r\n    show: true,\r\n    title: 'Potwierdzenie',\r\n    text: 'Czy na pewno chcesz kontynuować?',\r\n}\r\n\r\nexport default ModalWindow\r\n","import firebase from '../firebase'\r\n\r\nconst SHOPPING_LIST_COLL = 'shoppingList'\r\n\r\nexport const getShoppingList = uid => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).get()\r\n        .then(doc => (doc.exists ? doc.data().list : []))\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const updateShoppingList = (uid, list) => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).update(list)\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n\r\nexport const clearShoppingList = uid => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).set({ list: [] })\r\n        .catch(err => alert(`SET ERROR ${err.code}`))\r\n}\r\n\r\nexport const addToShoppingList = (uid, obj) => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).set({\r\n        list: typeof obj === 'string' ? firebase.firestore.FieldValue.arrayUnion(obj) : firebase.firestore.FieldValue.arrayUnion(...obj)\r\n    }, { merge: true })\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n\r\nexport const deleteFromShoppingList = (uid, obj) => {\r\n    return firebase.firestore().collection(SHOPPING_LIST_COLL).doc(uid).set({\r\n        list: typeof obj === 'string' ? firebase.firestore.FieldValue.arrayRemove(obj) : firebase.firestore.FieldValue.arrayRemove(...obj)\r\n    }, { merge: true })\r\n        .catch(err => alert(`UPDATE ERROR ${err.code}`))\r\n}\r\n","import config from '../config'\r\n\r\nexport default unitCode => {\r\n    const unit = config.ingredientUtils.find(i => i.code === unitCode)\r\n    return unit ? unit.name : ''\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button, ButtonGroup, Form, InputGroup } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faShoppingCart, faClipboard, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport {addToShoppingList, clearShoppingList, deleteFromShoppingList} from '../firebase/firestore/shoppingList'\r\nimport copy from 'copy-to-clipboard'\r\nimport firebase from  '../firebase/firebase'\r\nimport ModalWindow from './ModalWindow'\r\nimport getUnitName from '../utils/getUnitName'\r\n\r\nconst ListContainer = styled.div`\r\n    text-align: center;\r\n`\r\n\r\nconst ItemContainer = styled.div`\r\n    position: relative;\r\n    background-color: #fff;\r\n    max-width: 600px;\r\n    margin: 0 auto 5px auto;\r\n    height: 44px;\r\n    line-height: 44px;\r\n    border-radius: 4px;\r\n    color: #000;\r\n    padding-left: 70px;\r\n    overflow-y: hidden;\r\n    text-align: left;\r\n    text-decoration: ${props => props.lineThrough ? 'line-through' : 'none'};\r\n`\r\n\r\nconst ItemButton = styled(Button)`\r\n    position: absolute;\r\n    top: 6px;\r\n    left: 6px;\r\n    min-width: 50px;\r\n    text-align: center;\r\n`\r\n\r\nconst MainOptionContainer = styled(ButtonGroup)`\r\n    display: block;\r\n    text-align: center;\r\n    padding: 0 15px;\r\n    max-width: 600px;\r\n    margin: 15px auto;\r\n    svg { margin: 0 8px; }\r\n`\r\n\r\nconst ManualAdder = styled(InputGroup)`\r\n    margin: 15px auto;\r\n    max-width: 600px;\r\n`\r\n\r\nconst convertObjects = list => {\r\n    if(list.length === 0) return []\r\n    if(typeof list[0] === 'string') return list\r\n    if(typeof list[0] === 'object' && list[0] !== null) {\r\n        return list.map(i => {\r\n            if(i.unit === '') {\r\n                return ''\r\n            }else{\r\n                return `${i.name} (${getUnitName(i.unit)})${i.value === 0 ? '' : ' - ' + i.value}`\r\n            }\r\n        })\r\n    }\r\n    return []\r\n}\r\n\r\nconst ListItem = ({ item, itemAdded, addOption, deleteOption }) => {\r\n    const [actionExecuted, setActionExecuted] = useState(false)\r\n    const uid = firebase.auth().currentUser.uid\r\n\r\n    const addAction = () => {\r\n        setActionExecuted(true)\r\n        addToShoppingList(uid, item)\r\n    }\r\n    const deleteAction = () => {\r\n        setActionExecuted(true)\r\n        deleteFromShoppingList(uid, item)\r\n    }\r\n\r\n    return(\r\n        <ItemContainer lineThrough={deleteOption && actionExecuted}>\r\n            {\r\n                addOption\r\n                &&\r\n                <ItemButton variant={'success'} size={'sm'} disabled={actionExecuted || itemAdded} onClick={addAction}>\r\n                    <FontAwesomeIcon icon={actionExecuted || itemAdded ? faCheck : faShoppingCart}/>\r\n                </ItemButton>\r\n            }\r\n            {\r\n                deleteOption\r\n                &&\r\n                <ItemButton variant={'danger'} size={'sm'} disabled={actionExecuted} onClick={deleteAction}>\r\n                    <FontAwesomeIcon icon={faTrash}/>\r\n                </ItemButton>\r\n            }\r\n            {item}\r\n        </ItemContainer>\r\n    )\r\n}\r\n\r\nListItem.propTypes = {\r\n    item: PropTypes.string.isRequired,\r\n    itemAdded: PropTypes.bool,\r\n    addOption: PropTypes.bool,\r\n    deleteOption: PropTypes.bool,\r\n}\r\n\r\nconst IngredientList = (props) => {\r\n    const [list, setList] = useState(convertObjects(props.list))\r\n    const [itemsAdded, setItemsAdded] = useState(false)\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false)\r\n    const [dataCopied, setDataCopied] = useState(false)\r\n    const [customItem, setCustomItem] = useState('')\r\n    const uid = firebase.auth().currentUser.uid\r\n\r\n    const addAll = () => {\r\n        setItemsAdded(true)\r\n        addToShoppingList(uid, list)\r\n    }\r\n    const deleteAll = () => {\r\n        setDeleteModalIsOpen(false)\r\n        setList([])\r\n        clearShoppingList(uid)\r\n    }\r\n    const copyToClipboard = () => {\r\n        setDataCopied(true)\r\n        copy(list.join('\\n'))\r\n        setTimeout(() => setDataCopied(false), 2000)\r\n    }\r\n    const addCustomItem = () => {\r\n        setList([\r\n            ...list,\r\n            customItem\r\n        ])\r\n        addToShoppingList(uid, customItem)\r\n        setCustomItem('')\r\n    }\r\n\r\n    return(\r\n        <ListContainer>\r\n            <MainOptionContainer block>\r\n                {\r\n                    props.addAllOption\r\n                    &&\r\n                    <Button variant={'success'} disabled={itemsAdded || list.length === 0} onClick={addAll}>\r\n                        <FontAwesomeIcon icon={itemsAdded ? faCheck : faShoppingCart}/>{itemsAdded ? 'Dodano' : 'Dodaj wszystkie'}\r\n                    </Button>\r\n                }\r\n                {\r\n                    props.clearOption\r\n                    &&\r\n                    <Button variant={'danger'} disabled={list.length === 0} onClick={() => setDeleteModalIsOpen(true)}>\r\n                        <FontAwesomeIcon icon={faTrash}/>Wyczyść\r\n                    </Button>\r\n                }\r\n                {\r\n                    props.exportOption\r\n                    &&\r\n                    <Button variant={'warning'} disabled={dataCopied || list.length === 0} onClick={copyToClipboard}>\r\n                        <FontAwesomeIcon icon={dataCopied ? faCheck : faClipboard}/>{dataCopied ? 'Zapisano!' : 'Do schowka'}\r\n                    </Button>\r\n                }\r\n            </MainOptionContainer>\r\n            {\r\n                list.map(item => (\r\n                    <ListItem key={item} item={item} itemsAdded={itemsAdded} {...props} />\r\n                ))\r\n            }\r\n            {list.length === 0 && <i>Lista składników jest pusta</i>}\r\n            {\r\n                props.manualAdder\r\n                &&\r\n                <ManualAdder>\r\n                    <Form.Control type={'text'}\r\n                                  value={customItem}\r\n                                  onChange={e => setCustomItem(e.target.value)}\r\n                                  placeholder={'Nowa pozycja'}\r\n                                  maxLength={'50'} />\r\n                    <InputGroup.Append>\r\n                        <Button variant={'success'}\r\n                                disabled={customItem.length < 5}\r\n                                onClick={addCustomItem}>\r\n                            Dodaj\r\n                        </Button>\r\n                    </InputGroup.Append>\r\n                </ManualAdder>\r\n            }\r\n            <ModalWindow show={deleteModalIsOpen}\r\n                         onSubmit={deleteAll}\r\n                         onCancel={() => setDeleteModalIsOpen(false)}\r\n                         text={'Czy chcesz usunąć całą listę zakupów?'} />\r\n        </ListContainer>\r\n    )\r\n}\r\n\r\nIngredientList.propTypes = {\r\n    list: PropTypes.array.isRequired,\r\n    addOption: PropTypes.bool,\r\n    deleteOption: PropTypes.bool,\r\n    exportOption: PropTypes.bool,\r\n    addAllOption: PropTypes.bool,\r\n    clearOption: PropTypes.bool,\r\n    manualAdder: PropTypes.bool,\r\n}\r\n\r\nexport default IngredientList\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faChevronLeft, faPlayCircle, faStar as solidFaStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStar as regularFaStar } from '@fortawesome/free-regular-svg-icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport { getRecipe, deleteRecipe } from '../firebase/firestore/recipes'\r\nimport DataLoader from '../components/DataLoader'\r\nimport ModalWindow from '../components/ModalWindow'\r\nimport IngredientList from '../components/IngredientList'\r\n\r\nconst RecipeTitleContainer = styled.div`\r\n    margin: 50px 20px 30px;\r\n    font-size: 1.2rem;\r\n`\r\n\r\nconst Title = styled.div`\r\n    text-align: center;\r\n    margin-top: 14px;\r\n`\r\n\r\nconst Content = styled.div`\r\n    text-align: center;\r\n    font-weight: bold;\r\n    margin: 6px 0 0 0;\r\n`\r\n\r\nconst TimerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 20px;\r\n`\r\n\r\nconst SingleTimerContainer = styled.div`\r\n    flex: 1;\r\n    font-size: 14px;\r\n    text-align: center;\r\n  \r\n    div {\r\n        font-size: 3rem;\r\n    }\r\n`\r\n\r\nconst FooterButton = styled(Button)`\r\n    min-width: 200px;\r\n    max-width: 600px;\r\n    margin: 5px auto;\r\n    svg { margin-right: 6px; }\r\n`\r\n\r\nconst DifficultMeter = ({level}) => (\r\n    <Content>\r\n        {[1,2,3,4,5].map(i => <FontAwesomeIcon key={i} icon={level >= i ? solidFaStar : regularFaStar} />)}\r\n    </Content>\r\n)\r\n\r\nDifficultMeter.propTypes = {\r\n    level: PropTypes.number.isRequired\r\n}\r\n\r\nconst TimeDisplay = ({minutes, description}) => {\r\n    let h = Math.floor(minutes / 60)\r\n    let m = minutes % 60\r\n    if(m < 10) m = '0' + m\r\n    return (\r\n        <SingleTimerContainer>\r\n            {minutes === 0 ? <div>--:--</div> : <div>{h}:{m}</div>}\r\n            {description}\r\n        </SingleTimerContainer>\r\n    )\r\n}\r\n\r\nTimeDisplay.propTypes = {\r\n    minutes: PropTypes.number.isRequired,\r\n    description: PropTypes.string,\r\n}\r\n\r\nconst RecipePreview = () => {\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false)\r\n    const { push } = useHistory()\r\n    const { category, recipe } = useParams()\r\n\r\n    return (\r\n        <>\r\n            <DataLoader loader={() => getRecipe(recipe)} viewer={data => (\r\n                <>\r\n                    <CardTitle leftButton={{ link: `/recipes/${category}`, variant: `light`, icon: faChevronLeft }}\r\n                               rightButton={data.steps.length > 0 && { link: `/recipes/${category}/${recipe}/cooking`, variant: `success`, icon: faPlayCircle }}>\r\n                        Podgląd przepisu\r\n                    </CardTitle>\r\n\r\n                    <RecipeTitleContainer>\r\n                        <Content>{data.name}</Content>\r\n                        <DifficultMeter level={data.difficult} />\r\n                        <TimerContainer>\r\n                            <TimeDisplay minutes={data.preparationTime}\r\n                                         description={'Czas przygotowywania'} />\r\n                            <TimeDisplay minutes={data.cookingTime}\r\n                                         description={'Czas gotowania'} />\r\n                        </TimerContainer>\r\n                    </RecipeTitleContainer>\r\n\r\n                    <Title>Lista składników</Title>\r\n                    <IngredientList list={data.ingredients} addOption addAllOption exportOption />\r\n\r\n                    <Title>Zarządzanie przepisem</Title>\r\n                    <Content>\r\n                        <FooterButton variant={'secondary'} block onClick={() => push(`/recipes/${category}/${recipe}/edit-recipe`)}>Edytuj przepis</FooterButton>\r\n                        <FooterButton variant={'secondary'} block onClick={() => push(`/recipes/${category}/${recipe}/edit-ingredients`)}>Edytuj listę składników</FooterButton>\r\n                        <FooterButton variant={'secondary'} block onClick={() => push(`/recipes/${category}/${recipe}/edit-steps`)}>Edytuj listę kroków</FooterButton>\r\n                        <FooterButton variant={'danger'} block onClick={() => setDeleteModalIsOpen(true)}>\r\n                            <FontAwesomeIcon icon={faTrash} /> Usuń przepis\r\n                        </FooterButton>\r\n                    </Content>\r\n                </>\r\n            )} />\r\n            <ModalWindow show={deleteModalIsOpen}\r\n                         text={'Czy chcesz usunąć cały przepis?'}\r\n                         onSubmit={() => deleteRecipe(recipe).then(() => push(`/recipes/${category}`))}\r\n                         onCancel={() => setDeleteModalIsOpen(false)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipePreview\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nconst useTimer = (onTimeOver) => {\r\n    const [status, setStatus] = useState({\r\n        isRunning: false,\r\n        startTime: 0,\r\n        initialTime: 0,\r\n        timeLeft: 0,\r\n        lastSetTimeValue: 0,\r\n    })\r\n    const intervalRef = useRef()\r\n\r\n    const update = () => {\r\n        setStatus(current => {\r\n            if(current.timeLeft <= 0) {\r\n                stopService()\r\n                if(onTimeOver) onTimeOver()\r\n                return {\r\n                    ...current,\r\n                    isRunning: false,\r\n                    timeLeft: 0\r\n                }\r\n            }else{\r\n                return {\r\n                    ...current,\r\n                    timeLeft: Math.floor(current.initialTime - (new Date() - current.startTime.getTime()) / 1000)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const stopService = () => {\r\n        if(intervalRef.current) {\r\n            clearInterval(intervalRef.current)\r\n            intervalRef.current = undefined\r\n        }\r\n    }\r\n\r\n    const startService = () => {\r\n        if(!intervalRef.current) {\r\n            intervalRef.current = setInterval(update, 100)\r\n            update()\r\n        }\r\n    }\r\n\r\n    const play = () => {\r\n        if(!status.isRunning && status.timeLeft > 0) {\r\n            setStatus(current => ({\r\n                ...current,\r\n                isRunning: true,\r\n                initialTime: current.timeLeft,\r\n                startTime: new Date(),\r\n            }))\r\n            startService()\r\n        }\r\n    }\r\n\r\n    const pause = () => {\r\n        if(status.isRunning) {\r\n            setStatus(current => ({\r\n                ...current,\r\n                isRunning: false,\r\n            }))\r\n            stopService()\r\n        }\r\n    }\r\n\r\n    const resetTime = (autoPause = true) => {\r\n        setStatus(current => ({\r\n            ...current,\r\n            isRunning: autoPause ? false : current.isRunning,\r\n            startTime: new Date(),\r\n            initialTime: current.lastSetTimeValue,\r\n            timeLeft: current.lastSetTimeValue,\r\n        }))\r\n        if(autoPause) stopService()\r\n    }\r\n\r\n    const setTime = (newTime, autoStart = false) => {\r\n        setStatus({\r\n            isRunning: false,\r\n            startTime: 0,\r\n            initialTime: newTime,\r\n            timeLeft: newTime,\r\n            lastSetTimeValue: newTime,\r\n        })\r\n        stopService()\r\n        if(autoStart) play()\r\n    }\r\n\r\n    useEffect(() => stopService, [])\r\n\r\n    return {\r\n        isRunning: status.isRunning,\r\n        timeLeft: status.timeLeft,\r\n        play,\r\n        pause,\r\n        resetTime,\r\n        setTime,\r\n    }\r\n}\r\n\r\nexport default useTimer\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMinus, faPlus, faPlay, faPause, faUndo } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button } from 'react-bootstrap'\r\nimport useTimer from '../hooks/useTimer'\r\n\r\nconst MIN_FONT_SIZE = 18\r\nconst MAX_FONT_SIZE = 50\r\n\r\nconst PopupMainContainer = styled.div`\r\n    display: ${props => props.hide ? 'none' : 'block'};\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 180px;\r\n    width: 100%;\r\n`\r\n\r\nconst PopupContainer = styled.div`\r\n    position: relative;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n    width: 320px;\r\n    max-width: 90vw;\r\n    height: 90px;\r\n    margin: 0 auto;\r\n    color: #000;\r\n`\r\n\r\nconst Title = styled.div`\r\n    text-align: center;\r\n    font-weight: bold;\r\n    padding: 8px 0;\r\n`\r\n\r\nconst CenterText = styled.div`\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    position: relative;\r\n    bottom: 6px;\r\n    margin: 0 70px;\r\n`\r\n\r\nconst SideButton = styled(Button)`\r\n    position: absolute;\r\n    left: ${props => props.onRight ? 'inherit' : '10px'};\r\n    right: ${props => props.onRight ? '10px' : 'inherit'};\r\n`\r\n\r\nconst generateTimerString = timeLeft => {\r\n    if(timeLeft === 0) return `-:--:--`\r\n    let h = Math.floor(timeLeft / 3600)\r\n    let m = Math.floor(timeLeft / 60)\r\n    let s = Math.floor(timeLeft - h * 3600 - m * 60)\r\n    if(m < 10) m = '0' + m\r\n    if(s < 10) s = '0' + s\r\n    return `${h}:${m}:${s}`\r\n}\r\n\r\nconst CookingPopupPanel = ({popupMode, stepTimerValue, fontSize, onFontSizeChange, onTimeOver}) => {\r\n    const { isRunning, timeLeft, play, pause, setTime, } = useTimer(() => {\r\n        if(onTimeOver) onTimeOver()\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(!isRunning) setTime(stepTimerValue * 60)\r\n    }, [stepTimerValue])\r\n\r\n    const playPauseButton = () => {\r\n        if(isRunning) {\r\n            pause()\r\n        }else{\r\n            play()\r\n        }\r\n    }\r\n\r\n    const resetButton = () => {\r\n        if(!isRunning) setTime(stepTimerValue * 60)\r\n    }\r\n\r\n    return(\r\n        <PopupMainContainer hide={popupMode === 'OFF'}>\r\n            <PopupContainer>\r\n                <Title>{popupMode === 'TIMER' ? 'Timer' : 'Rozmiar czcionki'}</Title>\r\n                {\r\n                    popupMode === 'TIMER'\r\n                    ?\r\n                        <>\r\n                            <SideButton variant={'secondary'} onClick={playPauseButton}>\r\n                                <FontAwesomeIcon icon={isRunning ? faPause : faPlay}/>\r\n                            </SideButton>\r\n                            <SideButton variant={'secondary'} disabled={isRunning} onClick={resetButton} onRight>\r\n                                <FontAwesomeIcon icon={faUndo}/>\r\n                            </SideButton>\r\n                            <CenterText>{generateTimerString(timeLeft)}</CenterText>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <SideButton variant={'secondary'} disabled={fontSize - 2 < MIN_FONT_SIZE} onClick={() => onFontSizeChange(fontSize - 2)}>\r\n                                <FontAwesomeIcon icon={faMinus}/>\r\n                            </SideButton>\r\n                            <SideButton variant={'secondary'} disabled={fontSize + 2 > MAX_FONT_SIZE} onClick={() => onFontSizeChange(fontSize + 2)} onRight>\r\n                                <FontAwesomeIcon icon={faPlus}/>\r\n                            </SideButton>\r\n                            <CenterText>{fontSize}</CenterText>\r\n                        </>\r\n                }\r\n            </PopupContainer>\r\n        </PopupMainContainer>\r\n    )\r\n}\r\n\r\nCookingPopupPanel.propTypes = {\r\n    popupMode: PropTypes.string,\r\n    stepTimerValue: PropTypes.number.isRequired,\r\n    fontSize: PropTypes.number.isRequired,\r\n    onFontSizeChange: PropTypes.func.isRequired,\r\n    onTimeOver: PropTypes.func,\r\n}\r\n\r\nCookingPopupPanel.defaultProps = {\r\n    popupMode: 'OFF',\r\n}\r\n\r\nexport default CookingPopupPanel\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCarrot, faClock, faSearchPlus, faChevronLeft, faTimes, faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { getRecipe } from '../firebase/firestore/recipes'\r\nimport DataLoader from '../components/DataLoader'\r\nimport ModalWindow from '../components/ModalWindow'\r\nimport CookingPopupPanel from '../components/CookingPopupPanel'\r\nimport getUnitName from '../utils/getUnitName'\r\n\r\nconst TextContainer = styled.div`\r\n    font-size: ${props => props.fontSize + 'px'};\r\n    padding: 20px 20px 100px;\r\n`\r\n\r\nconst ControlButtonMainContainer = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    bottom: 0;\r\n    width: 100%;\r\n    max-width: 800px;\r\n    background-color: #3589e3;\r\n    transform: translateX(-50%);\r\n`\r\n\r\nconst ControlButtonRowContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    max-width: 300px;\r\n    margin: 15px auto;\r\n`\r\n\r\nconst ControlButtonStyle = styled(Button)`\r\n    flex: 1;\r\n    border-radius: 50%;\r\n    display: block;\r\n    max-width: 60px;\r\n    height: 60px;\r\n    margin: 0 auto;\r\n    font-size: 1.6rem;\r\n`\r\n\r\nconst ControlButton = ({variant = 'light', icon, onClick, disabled}) => (\r\n    <ControlButtonStyle variant={variant} onClick={onClick} disabled={disabled}>\r\n        <FontAwesomeIcon icon={icon} />\r\n    </ControlButtonStyle>\r\n)\r\n\r\nControlButton.propTypes = {\r\n    variant: PropTypes.string,\r\n    icon: PropTypes.object.isRequired,\r\n    onClick: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n}\r\n\r\nconst getIngredientList = ingredients => (\r\n    ingredients.map((i, idx) => (\r\n        <div key={i.id}>\r\n            {`${idx+1}. ${i.name} [${getUnitName(i.unit)}]${i.value === 0 ? '' : ' - ' + i.value}`}\r\n        </div>\r\n    ))\r\n)\r\n\r\nconst Cooking = () => {\r\n    const [ingredientMode, setIngredientMode] = useState(false)\r\n    const [popupMode, setPopupMode] = useState('OFF')\r\n    const [fontSize, setFontSize] = useState(28)\r\n    const [stepNumber, setStepNumber] = useState(0)\r\n    const [exitModalIsOpen, setExitModalIsOpen] = useState(false)\r\n    const { push } = useHistory()\r\n    const { category, recipe } = useParams()\r\n\r\n    useEffect(() => {\r\n        if(ingredientMode) setIngredientMode(false)\r\n    }, [stepNumber])\r\n\r\n    const switchToPrevStep = () => setStepNumber(v => v--)\r\n    const switchToNextStep = () => setStepNumber(v => v++)\r\n    const switchPopup = popupId => setPopupMode(popupId === popupMode ? 'OFF' : popupId)\r\n\r\n    return (\r\n        <>\r\n            <DataLoader loader={() => getRecipe(recipe)} viewer={data => (\r\n                <>\r\n                    <TextContainer fontSize={fontSize}>\r\n                        {\r\n                            ingredientMode\r\n                            ?\r\n                            getIngredientList(data.ingredients)\r\n                            :\r\n                            `${stepNumber+1}. ${data.steps[stepNumber].text}`\r\n                        }\r\n                    </TextContainer>\r\n                    <CookingPopupPanel popupMode={popupMode}\r\n                                       stepTimerValue={data.steps[stepNumber].timer}\r\n                                       fontSize={fontSize}\r\n                                       onFontSizeChange={v => setFontSize(v)}\r\n                                       onTimeOver={() => {setTimeout(() => setPopupMode('TIMER'), 0)}} />\r\n                    <ControlButtonMainContainer>\r\n                        <ControlButtonRowContainer>\r\n                            <ControlButton icon={faCarrot}\r\n                                           variant={ingredientMode ? 'warning' : undefined}\r\n                                           onClick={() => setIngredientMode(v => !v)} />\r\n                            <ControlButton icon={faClock}\r\n                                           variant={popupMode === 'TIMER' ? 'warning' : undefined}\r\n                                           onClick={() => switchPopup('TIMER')} />\r\n                            <ControlButton icon={faSearchPlus}\r\n                                           variant={popupMode === 'FONT' ? 'warning' : undefined}\r\n                                           onClick={() => switchPopup('FONT')} />\r\n                        </ControlButtonRowContainer>\r\n                        <ControlButtonRowContainer>\r\n                            <ControlButton icon={faChevronLeft}\r\n                                           disabled={stepNumber === 0}\r\n                                           onClick={switchToPrevStep} />\r\n                            <ControlButton icon={faTimes}\r\n                                           variant={'secondary'}\r\n                                           onClick={() => setExitModalIsOpen(true)} />\r\n                            <ControlButton icon={faChevronRight}\r\n                                           disabled={data.steps.length - 1 <= stepNumber}\r\n                                           onClick={switchToNextStep} />\r\n                        </ControlButtonRowContainer>\r\n                    </ControlButtonMainContainer>\r\n                </>\r\n            )}/>\r\n            <ModalWindow show={exitModalIsOpen}\r\n                         text={'Czy chcesz wyjść z trybu gotowania?'}\r\n                         onSubmit={() => push(`/recipes/${category}/${recipe}`)}\r\n                         onCancel={() => setExitModalIsOpen(false)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cooking\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button, Form, InputGroup } from 'react-bootstrap'\r\n\r\nconst Container = styled.div`\r\n    margin: 2px 0;\r\n`\r\n\r\nconst Btn = styled(Button)`\r\n      min-width: 40px;\r\n      font-weight: bold;\r\n      font-size: 12px;\r\n`\r\n\r\nconst NumberPicker = ({minValue, maxValue, step, value, onChange, prefix, label, zeroCustomText}) => {\r\n    const [val, setVal] = useState(value)\r\n    useEffect(() => setVal(value), [value])\r\n\r\n    const updateValue = diff => {\r\n        setVal(v => {\r\n            const newValue = Math.round((v + diff) * 100) / 100\r\n            onChange(newValue)\r\n            return newValue\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <InputGroup>\r\n                {\r\n                    step\r\n                    &&\r\n                    <InputGroup.Prepend>\r\n                        {\r\n                            step.slice().reverse().map(s => (\r\n                                <Btn key={'dn'+s}\r\n                                     variant={'secondary'}\r\n                                     onClick={() => updateValue(-s)}\r\n                                     disabled={val - s < minValue}>\r\n                                    -{s}\r\n                                </Btn>\r\n                            ))\r\n                        }\r\n                    </InputGroup.Prepend>\r\n                }\r\n                <Form.Control type={'text'}\r\n                              value={val === 0 && zeroCustomText ? zeroCustomText : `${prefix}${val}${label}`}\r\n                              style={{textAlign: 'center'}}\r\n                              readOnly />\r\n                {\r\n                    step\r\n                    &&\r\n                    <InputGroup.Append>\r\n                        {\r\n                            step.map(s => (\r\n                                <Btn key={'up'+s}\r\n                                     variant={'secondary'}\r\n                                     onClick={() => updateValue(s)}\r\n                                     disabled={val + s > maxValue}>\r\n                                    +{s}\r\n                                </Btn>\r\n                            ))\r\n                        }\r\n                    </InputGroup.Append>\r\n                }\r\n            </InputGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nNumberPicker.propTypes = {\r\n    minValue: PropTypes.number,\r\n    maxValue: PropTypes.number,\r\n    step: PropTypes.array,\r\n    value: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    prefix: PropTypes.string,\r\n    label: PropTypes.string,\r\n    zeroCustomText: PropTypes.string,\r\n}\r\n\r\nNumberPicker.defaultProps = {\r\n    minValue: 0,\r\n    maxValue: 100,\r\n    step: [1],\r\n    prefix: '',\r\n    label: '',\r\n}\r\n\r\nexport default NumberPicker\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport NumberPicker from '../components/NumberPicker'\r\nimport { addRecipe, getRecipe, updateRecipe } from '../firebase/firestore/recipes'\r\n\r\nconst Container = styled.div`\r\n    padding: 10px;\r\n`\r\n\r\nconst SectionTitle = styled.div`\r\n    text-align: center;\r\n    margin-top: 10px;\r\n    margin-bottom: 4px;\r\n`\r\n\r\nconst FooterMessage = styled.div`\r\n    text-align: center;\r\n    font-size: 14px;\r\n    margin: 15px auto 0 auto;\r\n    max-width: 400px;\r\n`\r\n\r\nconst RecipeEditor = () => {\r\n    const [name, setName] = useState('')\r\n    const [difficult, setDifficult] = useState(1)\r\n    const [preparationTime, setPreparationTime] = useState(0)\r\n    const [cookingTime, setCookingTime] = useState(0)\r\n    const history = useHistory()\r\n    const { category, recipe } = useParams()\r\n\r\n    useEffect(() => {\r\n        if(recipe) {\r\n            getRecipe(recipe)\r\n                .then(currentData => {\r\n                    setName(currentData.name)\r\n                    setDifficult(currentData.difficult)\r\n                    setPreparationTime(currentData.preparationTime)\r\n                    setCookingTime(currentData.cookingTime)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    const validateData = () => name.length > 3\r\n\r\n    const onSubmitButtonClick = () => {\r\n        if(recipe) {\r\n            updateRecipe(recipe, name, difficult, preparationTime, cookingTime)\r\n                .then(() => history.push(`/recipes/${category}/${recipe}`))\r\n        }else{\r\n            addRecipe(category, name, difficult, preparationTime, cookingTime)\r\n                .then(id => history.push(`/recipes/${category}/${id}`))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CardTitle leftButton={{ link: recipe ? `/recipes/${category}/${recipe}` : `/recipes/${category}`, variant: `light`, icon: faChevronLeft }}>\r\n                {recipe ? 'Edycja przepisu' : 'Nowy przepis'}\r\n            </CardTitle>\r\n            <Container>\r\n                <SectionTitle>Nazwa przepisu</SectionTitle>\r\n                <Form.Control type={'text'}\r\n                              value={name}\r\n                              onChange={e => setName(e.target.value)}\r\n                              maxLength={40} />\r\n\r\n                <SectionTitle>Trudność w przygotowaniu</SectionTitle>\r\n                <NumberPicker onChange={v => setDifficult(v)}\r\n                              value={difficult}\r\n                              minValue={1}\r\n                              maxValue={5}\r\n                              label={'/5'} />\r\n\r\n                <SectionTitle>Czas przygotowania</SectionTitle>\r\n                <NumberPicker onChange={v => setPreparationTime(v)}\r\n                              value={preparationTime}\r\n                              step={[10]}\r\n                              maxValue={300}\r\n                              label={' min'}\r\n                              downText={'-10'}\r\n                              upText={'+10'} />\r\n\r\n                <SectionTitle>Czas gotowania</SectionTitle>\r\n                <NumberPicker onChange={v => setCookingTime(v)}\r\n                              value={cookingTime}\r\n                              step={[10]}\r\n                              maxValue={300}\r\n                              label={' min'}\r\n                              downText={'-10'}\r\n                              upText={'+10'} />\r\n\r\n                <FooterMessage>\r\n                    Redagowanie listy składników oraz kroków gotowania możliwe jest z poziomu ekranu przepisu\r\n                </FooterMessage>\r\n\r\n                <Button variant={'success'}\r\n                        style={{marginTop: '20px'}}\r\n                        disabled={!validateData()}\r\n                        onClick={onSubmitButtonClick} block>\r\n                    {recipe ? 'Zaktualizuj przepis' : 'Dodaj przepis'}\r\n                </Button>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeEditor\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport NumberPicker from './NumberPicker'\r\nimport ModalWindow from './ModalWindow'\r\nimport getUnitName from '../utils/getUnitName'\r\nimport getUnitConfig from '../utils/getUnitConfig'\r\n\r\nconst Container = styled.div`\r\n    background-color: ${props => props.highlight ? '#ffa14d' : '#ececec'};\r\n    border-radius: 4px;\r\n    margin-bottom: 5px;\r\n    padding: 10px;\r\n    position: relative;\r\n`\r\n\r\nconst Title = styled.div`\r\n    color: #000;\r\n    line-height: 30px;\r\n    margin-bottom: 6px;\r\n`\r\n\r\nconst CornerButton = styled(Button)`\r\n    position: absolute;\r\n    top: 6px;\r\n    right: 10px;\r\n    min-width: 50px;\r\n    text-align: center;\r\n`\r\n\r\nconst DropdownSelector = styled.select`\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n    padding: 4px;\r\n    border-radius: 4px;\r\n`\r\n\r\nconst getIngredient = (dictionary, ingredientId) => {\r\n    const item = dictionary.find(i => i.id === ingredientId)\r\n    if(!item) return { id: '', name: '', unit: '' }\r\n    return { id: item.id, name: item.name, unit: item.unit }\r\n}\r\n\r\nconst IngredientSelector = ({dictionary, value, onChange}) => (\r\n    <DropdownSelector value={value} onChange={e => onChange(e.target.value)}>\r\n        <option value={''}> - wybierz składnik z listy - </option>\r\n        {dictionary.map(item => (<option key={item.id} value={item.id}>{item.name} [{getUnitName(item.unit)}]</option>))}\r\n    </DropdownSelector>\r\n)\r\n\r\nIngredientSelector.propTypes = {\r\n    dictionary: PropTypes.array.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nconst RecipeIngredientPanel = ({no, dictionary, initialValues, onDelete, onUpdate}) => {\r\n    const [modified, setModified] = useState(false)\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false)\r\n    const [ingredientId, setIngredientId] = useState(initialValues.id)\r\n    const [value, setValue] = useState(initialValues.value)\r\n\r\n    const unitConfig = getUnitConfig(dictionary, ingredientId)\r\n\r\n    const onSaveChanges = () => {\r\n        onUpdate(no - 1, getIngredient(dictionary, ingredientId), value)\r\n        setModified(false)\r\n    }\r\n    const onIngredientChange = v => {\r\n        setValue(0)\r\n        setIngredientId(v)\r\n        setModified(true)\r\n    }\r\n    const onTimerChange = v => {\r\n        setValue(v)\r\n        setModified(true)\r\n    }\r\n\r\n    return(\r\n        <Container highlight={modified}>\r\n            <Title>Składnik nr {no}</Title>\r\n            {\r\n                !modified\r\n                &&\r\n                <CornerButton variant={'danger'} size={'sm'} onClick={() => setDeleteModalIsOpen(true)}>\r\n                    <FontAwesomeIcon icon={faTrash}/>\r\n                </CornerButton>\r\n            }\r\n            {\r\n                modified\r\n                &&\r\n                <CornerButton variant={'success'} size={'sm'} onClick={onSaveChanges}>\r\n                    <FontAwesomeIcon icon={faCheck}/>\r\n                </CornerButton>\r\n            }\r\n            <IngredientSelector onChange={onIngredientChange}\r\n                                dictionary={dictionary}\r\n                                value={ingredientId} />\r\n            {\r\n                ingredientId !== '' && unitConfig.code !== 'UNKNOW'\r\n                &&\r\n                <NumberPicker value={value} onChange={onTimerChange} {...unitConfig} />\r\n            }\r\n            <ModalWindow show={deleteModalIsOpen}\r\n                         onSubmit={() => onDelete(no - 1)}\r\n                         onCancel={() => setDeleteModalIsOpen(false)}\r\n                         text={'Czy chcesz usunąć ten składnik? UWAGA: ta operacja zresetuje wszystkie niezapisane dane z pozostałych składników!'} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nRecipeIngredientPanel.propTypes = {\r\n    no: PropTypes.number.isRequired,\r\n    dictionary: PropTypes.array.isRequired,\r\n    initialValues: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default RecipeIngredientPanel\r\n","import config from '../config'\r\n\r\nexport default (dictionary, ingredientId) => {\r\n    if(ingredientId === '' || ingredientId === undefined) return {}\r\n    const unitCode = dictionary.find(i => i.id === ingredientId).unit\r\n    const uc = config.ingredientUtils.find(i => i.code === unitCode)\r\n    if(!uc) return {}\r\n    return {\r\n        minValue: uc.min,\r\n        maxValue: uc.max,\r\n        step: uc.step,\r\n        label: uc.label,\r\n        code: uc.code\r\n    }\r\n}\r\n","import firebase from '../firebase'\r\nimport { getIngredientsFromRecipe } from './recipes'\r\n\r\nconst INGREDIENTS_COLL = 'ingredients'\r\n\r\nexport const getIngredients = () => {\r\n    return firebase.firestore().collection(INGREDIENTS_COLL).get()\r\n        .then(collection => {\r\n            return collection.docs\r\n                .map(recipe => ({ id: recipe.id, ...recipe.data() }))\r\n                .sort((a, b) => {\r\n                    if(a.name < b.name) return -1\r\n                    if(a.name > b.name) return 1\r\n                    return 0\r\n                })\r\n        })\r\n        .catch(err => alert(`GET ERROR ${err.code}`))\r\n}\r\n\r\nexport const deleteIngredient = ingredientId => {\r\n    return firebase.firestore().collection(INGREDIENTS_COLL).doc(ingredientId).delete()\r\n        .catch(err => alert(`DELETE ERROR ${err.code}`))\r\n}\r\n\r\nexport const addIngredient = (name, unit) => {\r\n    return firebase.firestore().collection(INGREDIENTS_COLL).add({ name, unit })\r\n        .catch(err => alert(`ADD ERROR ${err.code}`))\r\n}\r\n\r\nexport const getIngredientsFromSystemAndRecipe = recipeId => {\r\n    const fromRecipe = getIngredientsFromRecipe(recipeId)\r\n    const fromSystem = getIngredients()\r\n    return Promise.all([fromRecipe, fromSystem])\r\n        .then(data => ({\r\n            recipe: data[0],\r\n            dictionary: data[1]\r\n        }))\r\n}\r\n","export default obj => JSON.parse(JSON.stringify(obj))\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport DataLoader from '../components/DataLoader'\r\nimport RecipeIngredientPanel from '../components/RecipeIngredientPanel'\r\nimport { updateIngredients } from '../firebase/firestore/recipes'\r\nimport { getIngredientsFromSystemAndRecipe } from '../firebase/firestore/ingredients'\r\nimport cloneObject from '../utils/cloneObject'\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    padding: 10px;\r\n    svg { margin: 0 4px; }\r\n`\r\n\r\nconst NewItemButton = styled(Button)`\r\n    margin-top: 10px;\r\n    width: 200px;\r\n`\r\n\r\nconst IngredientEditor = () => {\r\n    const { category, recipe } = useParams()\r\n\r\n    const deleteItem = (idx, data, dataSetter) => {\r\n        const newList = cloneObject(data)\r\n        newList.recipe.splice(idx, 1)\r\n        dataSetter(newList)\r\n        updateIngredients(recipe, newList.recipe)\r\n    }\r\n    const addNewItem = (data, dataSetter) => {\r\n        const newList = cloneObject(data)\r\n        newList.recipe.push({ id: '', name: '', unit: '', value: 0 })\r\n        dataSetter(newList)\r\n        updateIngredients(recipe, newList.recipe)\r\n    }\r\n    const updateItem = (idx, ingredient, value, data, dataSetter) => {\r\n        const newList = cloneObject(data)\r\n        newList.recipe[idx] = { id: ingredient.id, name: ingredient.name, unit: ingredient.unit, value }\r\n        dataSetter(newList)\r\n        updateIngredients(recipe, newList.recipe)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CardTitle leftButton={{ link: `/recipes/${category}/${recipe}`, variant: `light`, icon: faChevronLeft }}>\r\n                Edycja składników\r\n            </CardTitle>\r\n            <Container>\r\n                <DataLoader noPreventEmptyList\r\n                            loader={() => getIngredientsFromSystemAndRecipe(recipe)}\r\n                            viewer={(data, dataSetter) => (\r\n                                <>\r\n                                    {\r\n                                        data.recipe.map((item, idx) => (\r\n                                            <RecipeIngredientPanel key={idx+item.name+item.unit+item.value}\r\n                                                                   initialValues={item}\r\n                                                                   no={idx+1}\r\n                                                                   dictionary={data.dictionary}\r\n                                                                   onDelete={idx => deleteItem(idx, data, dataSetter)}\r\n                                                                   onUpdate={(idx, ingredient, value) => updateItem(idx, ingredient, value, data, dataSetter)} />\r\n                                        ))\r\n                                    }\r\n                                    <NewItemButton variant={'success'} onClick={() => addNewItem(data, dataSetter)}>\r\n                                        <FontAwesomeIcon icon={faPlusCircle} /> Nowy składnik\r\n                                    </NewItemButton>\r\n                                </>\r\n                            )} />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IngredientEditor\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport NumberPicker from './NumberPicker'\r\nimport ModalWindow from './ModalWindow'\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => props.highlight ? '#ffa14d' : '#ececec'};\r\n  border-radius: 4px;\r\n  margin-bottom: 5px;\r\n  padding: 10px;\r\n  position: relative;\r\n`\r\n\r\nconst Title = styled.div`\r\n  color: #000;\r\n  line-height: 30px;\r\n  margin-bottom: 6px;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  min-height: 100px;\r\n`\r\n\r\nconst TextareaCounter = styled.div`\r\n  color: #000;\r\n  font-size: 0.8rem;\r\n  text-align: right;\r\n  margin-right: 8px;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst CornerButton = styled(Button)`\r\n  position: absolute;\r\n  top: 6px;\r\n  right: 10px;\r\n  min-width: 50px;\r\n  text-align: center;\r\n`\r\n\r\nconst RecipeStepPanel = ({no, stepCount, initialValues, onDelete, onUpdate}) => {\r\n    const [modified, setModified] = useState(false)\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false)\r\n    const [text, setText] = useState(initialValues.text)\r\n    const [timer, setTimer] = useState(initialValues.timer)\r\n\r\n    const onSaveChanges = () => {\r\n        onUpdate(no - 1, text, timer)\r\n        setModified(false)\r\n    }\r\n    const onTextChange = e => {\r\n        setText(e.target.value)\r\n        setModified(true)\r\n    }\r\n    const onTimerChange = v => {\r\n        setTimer(v)\r\n        setModified(true)\r\n    }\r\n\r\n    return(\r\n        <Container highlight={modified}>\r\n            <Title>Krok {no} z {stepCount}</Title>\r\n            {!modified && <CornerButton variant={'danger'} size={'sm'} onClick={() => setDeleteModalIsOpen(true)}><FontAwesomeIcon icon={faTrash}/></CornerButton>}\r\n            {modified && <CornerButton variant={'success'} size={'sm'} onClick={onSaveChanges}><FontAwesomeIcon icon={faCheck}/></CornerButton>}\r\n            <Textarea value={text} onChange={onTextChange} maxLength={400} />\r\n            <TextareaCounter>{text.length}/400</TextareaCounter>\r\n            <NumberPicker value={timer}\r\n                          onChange={onTimerChange}\r\n                          step={[1, 10]}\r\n                          maxValue={180}\r\n                          prefix={'Timer: '}\r\n                          label={' min'}\r\n                          zeroCustomText={'Timer wył.'} />\r\n            <ModalWindow show={deleteModalIsOpen}\r\n                         onSubmit={() => onDelete(no - 1)}\r\n                         onCancel={() => setDeleteModalIsOpen(false)}\r\n                         text={'Czy chcesz usunąć ten krok? UWAGA: ta operacja zresetuje wszystkie niezapisane dane z pozostałych kroków!'} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nRecipeStepPanel.propTypes = {\r\n    no: PropTypes.number.isRequired,\r\n    stepCount: PropTypes.number.isRequired,\r\n    initialValues: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default RecipeStepPanel\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useParams } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport DataLoader from '../components/DataLoader'\r\nimport RecipeStepPanel from '../components/RecipeStepPanel'\r\nimport { getStepsFromRecipe, updateSteps } from '../firebase/firestore/recipes'\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    padding: 10px;\r\n    svg { margin: 0 4px; }\r\n`\r\n\r\nconst NewItemButton = styled(Button)`\r\n    margin-top: 10px;\r\n    width: 200px;\r\n`\r\n\r\nconst RecipeEditor = () => {\r\n    const { category, recipe } = useParams()\r\n\r\n    const deleteItem = (idx, data, dataSetter) => {\r\n        const newList = [...data]\r\n        newList.splice(idx, 1)\r\n        dataSetter(newList)\r\n        updateSteps(recipe, newList)\r\n    }\r\n    const addNewItem = (data, dataSetter) => {\r\n        const newList = [...data, { text: '', timer: 0 }]\r\n        dataSetter(newList)\r\n        updateSteps(recipe, newList)\r\n    }\r\n    const updateItem = (idx, text, timer, data, dataSetter) => {\r\n        const newList = [...data]\r\n        newList[idx] = { text, timer }\r\n        dataSetter(newList)\r\n        updateSteps(recipe, newList)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <CardTitle leftButton={{ link: `/recipes/${category}/${recipe}`, variant: `light`, icon: faChevronLeft }}>\r\n                Edycja kroków\r\n            </CardTitle>\r\n            <Container>\r\n                <DataLoader noPreventEmptyList\r\n                            loader={() => getStepsFromRecipe(recipe)}\r\n                            viewer={(data, dataSetter) => (\r\n                    <>\r\n                        {\r\n                            data.map((item, idx) => (\r\n                                <RecipeStepPanel key={idx+item.text+item.timer}\r\n                                                 initialValues={item}\r\n                                                 stepCount={data.length}\r\n                                                 no={idx+1}\r\n                                                 onDelete={idx => deleteItem(idx, data, dataSetter)}\r\n                                                 onUpdate={(idx, text, timer) => updateItem(idx, text, timer, data, dataSetter)} />\r\n                            ))\r\n                        }\r\n                        <NewItemButton variant={'success'} onClick={() => addNewItem(data, dataSetter)}>\r\n                            <FontAwesomeIcon icon={faPlusCircle} /> Nowa pozycja\r\n                        </NewItemButton>\r\n                    </>\r\n                )} />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeEditor\r\n","import React from 'react'\r\nimport { getShoppingList } from '../firebase/firestore/shoppingList'\r\nimport firebase from '../firebase/firebase'\r\nimport CardTitle from '../components/CardTitle'\r\nimport DataLoader from '../components/DataLoader'\r\nimport IngredientList from '../components/IngredientList'\r\n\r\nconst ShoppingList = () => {\r\n    const uid = firebase.auth().currentUser.uid\r\n\r\n    return(\r\n        <>\r\n            <CardTitle>Lista zakupów</CardTitle>\r\n            <DataLoader noPreventEmptyList\r\n                        loader={() => getShoppingList(uid)}\r\n                        viewer={data => (\r\n                <IngredientList list={data} deleteOption clearOption exportOption manualAdder />\r\n            )}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShoppingList\r\n","import config from '../config'\r\n\r\nexport default categoryCode => {\r\n    const category = config.categories.find(i => i.code === categoryCode)\r\n    return category ? category.name : ''\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport CardTitle from '../components/CardTitle'\r\nimport DataLoader from '../components/DataLoader'\r\nimport { getAllRecipes } from '../firebase/firestore/recipes'\r\nimport getCategoryName from '../utils/getCategoryName'\r\n\r\nconst SearchGroup = styled.div`\r\n    padding: 10px;\r\n`\r\n\r\nconst SearchResultButton = styled(Button)`\r\n    position: relative;\r\n    text-align: left;\r\n    line-height: 40px;\r\n    margin-bottom: 12px;\r\n`\r\n\r\nconst ButtonArrowIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    right: 20px;\r\n    margin-top: 20px;\r\n    transform: translateY(-50%);\r\n`\r\n\r\nconst SearchResultPanels = ({recipes, searchQuery, historyHook}) => {\r\n    searchQuery = searchQuery.toLowerCase()\r\n\r\n    // WARNING:\r\n    // THIS SEARCH ENGINE CONTAINS BAD PRACTISE WITH CLIENT-SIDE FILTERING BECAUSE FIRESTORE\r\n    // DOESN'T SUPPORT NATIVE FULL-TEXT SEARCHING - DOING IT PROPERLY REQUIRES USING EXTERNAL\r\n    // SEARCH ENGINE LIKE ALGOLIA BUT I DON'T WANT COMPLICATE TO MUCH THIS SIMPLE PROJECT\r\n\r\n    const filteredRecipes = recipes\r\n        .filter(i => i.name.toLowerCase().includes(searchQuery)).map(recipe => (\r\n        <SearchResultButton key={recipe.id}\r\n                            variant={'light'}\r\n                            block\r\n                            onClick={() => historyHook.push(`/recipes/${recipe.category}/${recipe.id}`)}>\r\n            <b>{recipe.name}</b> <i>({getCategoryName(recipe.category)})</i>\r\n            <ButtonArrowIcon icon={faChevronRight} />\r\n        </SearchResultButton>\r\n    ))\r\n    if(filteredRecipes.length === 0) {\r\n        return <>nie znaleziono przepisów o takiej nazwie</>\r\n    }else{\r\n        return filteredRecipes\r\n    }\r\n}\r\n\r\nconst Search = () => {\r\n    const [searchText, setSearchText] = useState('')\r\n    const history = useHistory()\r\n\r\n    return(\r\n        <>\r\n            <CardTitle>Wyszukiwarka</CardTitle>\r\n            <SearchGroup>\r\n                <Form.Control type={'text'}\r\n                              value={searchText}\r\n                              onChange={e => setSearchText(e.target.value)}\r\n                              placeholder={'Wpisz szukaną frazę (min. 3 znaki)'}\r\n                              maxLength={'30'} />\r\n            </SearchGroup>\r\n            <SearchGroup>\r\n                <DataLoader noPreventEmptyList\r\n                            loader={getAllRecipes}\r\n                            viewer={data => (\r\n                    searchText.length > 2\r\n                    &&\r\n                    <SearchResultPanels searchQuery={searchText}\r\n                                        recipes={data}\r\n                                        historyHook={history} />\r\n                )} />\r\n            </SearchGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from 'react'\r\nimport { Button, Dropdown, Form, InputGroup } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport config from '../config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport CardTitle from '../components/CardTitle'\r\nimport ModalWindow from '../components/ModalWindow'\r\nimport { getIngredients, deleteIngredient, addIngredient } from '../firebase/firestore/ingredients'\r\nimport DataLoader from '../components/DataLoader'\r\n\r\nconst Container = styled.div`\r\n    padding: 10px;\r\n`\r\n\r\nconst ItemButton = styled(Button)`\r\n    position: relative;\r\n    text-align: left;\r\n    line-height: 40px;\r\n    margin-bottom: 12px;\r\n`\r\n\r\nconst TrashIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    right: 20px;\r\n    margin-top: 20px;\r\n    transform: translateY(-50%);\r\n`\r\n\r\nconst SectionTitle = styled.div`\r\n    text-align: center;\r\n    margin-top: 10px;\r\n    margin-bottom: 4px;\r\n`\r\n\r\nconst IngredientAdder = ({ onSubmit }) => {\r\n    const [name, setName] = useState('')\r\n    const [dropdownIsOpen, setDropdownIsOpen] = useState(false)\r\n    const [unitType, setUnitType] = useState(config.ingredientUtils[0].code)\r\n\r\n    const adder = () => {\r\n        addIngredient(name, unitType)\r\n            .then(() => {\r\n                setName('')\r\n                setUnitType(config.ingredientUtils[0].code)\r\n                if(onSubmit) onSubmit()\r\n            })\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Dropdown isOpen={dropdownIsOpen}\r\n                      toggle={() => setDropdownIsOpen(v => !v)}>\r\n                <Dropdown.Toggle variant={'light'} caret block>\r\n                    Jednostka: {config.ingredientUtils.find(unit => unit.code === unitType).name}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {\r\n                        config.ingredientUtils.map(unit => (\r\n                            <Dropdown.Item key={unit.code}\r\n                                           onClick={() => setUnitType(unit.code)}\r\n                                           disabled={unit.code === unitType}>\r\n                                {unit.name}\r\n                            </Dropdown.Item>\r\n                        ))\r\n                    }\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <InputGroup style={{marginTop: '10px'}}>\r\n                <Form.Control type={'text'}\r\n                              value={name}\r\n                              onChange={e => setName(e.target.value)}\r\n                              placeholder={'Nazwa składnika'}\r\n                              maxLength={'30'} />\r\n                <InputGroup.Append>\r\n                    <Button variant={'success'}\r\n                            onClick={adder}\r\n                            disabled={name.length < 3}>\r\n                        Dodaj\r\n                    </Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst IngredientBrowser = () => {\r\n    const [selectedId, setSelectedId] = useState(null)\r\n    const [refreshFlag, setRefreshFlag] = useState(false)\r\n\r\n    const deleteItem = () => {\r\n        deleteIngredient(selectedId)\r\n            .then(() => {\r\n                setSelectedId(null)\r\n                setRefreshFlag(f => !f)\r\n            })\r\n    }\r\n    return(\r\n        <>\r\n            <CardTitle>Składniki</CardTitle>\r\n            <SectionTitle>Nowa pozycja</SectionTitle>\r\n            <IngredientAdder onSubmit={() => setRefreshFlag(f => !f)} />\r\n            <SectionTitle>Wprowadzone składniki</SectionTitle>\r\n            <DataLoader refreshFlag={refreshFlag}\r\n                        loader={getIngredients}\r\n                        viewer={data => (\r\n                <Container>\r\n                    {\r\n                        data.map(item => (\r\n                            <ItemButton key={item.id}\r\n                                        variant={'light'}\r\n                                        block\r\n                                        onClick={() => setSelectedId(item.id)}>\r\n                                <b>{item.name}</b> <i>({config.ingredientUtils.find(unit => unit.code === item.unit).name})</i>\r\n                                <TrashIcon icon={faTrash} style={{color: '#d00000'}} />\r\n                            </ItemButton>\r\n                        ))\r\n                    }\r\n                </Container>\r\n            )} />\r\n            <ModalWindow show={selectedId != null}\r\n                         onSubmit={deleteItem}\r\n                         onCancel={() => setSelectedId(null)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IngredientBrowser\r\n","import firebase from '../firebase'\r\n\r\nconst RECIPES_COLL = 'recipes'\r\nconst INGREDIENTS_COLL = 'ingredients'\r\nconst SHOPPING_LIST_COLL = 'shoppingList'\r\n\r\nconst exportDataFromCollection = (collectionName, docName = '') => {\r\n    if(docName === '') {\r\n        return firebase.firestore().collection(collectionName).get()\r\n            .then(collection => (\r\n                JSON.stringify(collection.docs.map(doc => ({ id: doc.id, data: doc.data() })))\r\n            ))\r\n            .catch(err => alert(`EXPORT ERROR ${err.code}`))\r\n    }else{\r\n        return firebase.firestore().collection(collectionName).doc(docName).get()\r\n            .then(doc => (\r\n                JSON.stringify({ id: doc.id, data: doc.data() })\r\n            ))\r\n            .catch(err => alert(`EXPORT ERROR ${err.code}`))\r\n    }\r\n}\r\n\r\nexport const exportRecipes = () => exportDataFromCollection(RECIPES_COLL)\r\n\r\nexport const exportIngredients = () => exportDataFromCollection(INGREDIENTS_COLL)\r\n\r\nexport const exportShopingList = uid => exportDataFromCollection(SHOPPING_LIST_COLL, uid)\r\n","import React, {useContext, useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport firebase from 'firebase'\r\nimport { UserContext } from '../firebase/UserContext'\r\nimport {\r\n    exportRecipes,\r\n    exportIngredients,\r\n    exportShopingList\r\n} from '../firebase/firestore/databaseExports'\r\n\r\nconst Panel = styled.div`\r\n    text-align: center;\r\n    margin: 50px 20px 0 20px;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n    margin-top: 25px;\r\n`\r\n\r\nconst logout = () => {\r\n    firebase.auth().signOut()\r\n        .catch(err => alert(`AUTH ERROR: ${err}`))\r\n}\r\n\r\nconst ProfilePage = () => {\r\n    const user = useContext(UserContext)\r\n    const [exportData, setExportData] = useState(null)\r\n    const [fetchingInProgress, setFetchingInProgress] = useState(false)\r\n    const [fileName, setFileName] = useState('exportdata')\r\n\r\n    const fetchData = typeID => {\r\n        setExportData(null)\r\n        setFetchingInProgress(true)\r\n        switch (typeID) {\r\n            case 'RECIPES':\r\n                setFileName('RecipesDataExport')\r\n                exportRecipes().then(data => setExportData(data))\r\n                break\r\n            case 'INGREDIENTS':\r\n                setFileName('IngredientsDataExport')\r\n                exportIngredients().then(data => setExportData(data))\r\n                break\r\n            case 'SHOPINGLIST':\r\n                setFileName('ShopingListDataExport')\r\n                exportShopingList(user.uid).then(data => setExportData(data))\r\n                break\r\n            default:\r\n                setFileName('exportdata')\r\n                setExportData(null)\r\n        }\r\n    }\r\n\r\n    const clickExportRecipes = () => fetchData('RECIPES')\r\n    const clickExportIngredients = () => fetchData('INGREDIENTS')\r\n    const clickExportShopingList = () => fetchData('SHOPINGLIST')\r\n\r\n    const downloadExportData = () => {\r\n        const data = 'data:text/json;charset=utf-8,' + encodeURIComponent(exportData.toString())\r\n        const downloadAnchorNode = document.createElement('a')\r\n        downloadAnchorNode.setAttribute('href', data)\r\n        downloadAnchorNode.setAttribute('download', `${fileName}.json`);\r\n        document.body.appendChild(downloadAnchorNode)\r\n        downloadAnchorNode.click()\r\n        downloadAnchorNode.remove()\r\n        setExportData(null)\r\n        setFetchingInProgress(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Panel>\r\n                <b>Zalogowano jako:</b><br />{user.displayName}<br/>{user.email}\r\n                <StyledButton variant={'danger'} block onClick={logout}>Wyloguj z systemu</StyledButton>\r\n            </Panel>\r\n            <Panel>\r\n                <StyledButton variant={'light'} block onClick={clickExportRecipes}>Eksportuj przepisy</StyledButton>\r\n                <StyledButton variant={'light'} block onClick={clickExportIngredients}>Eksportuj składniki</StyledButton>\r\n                <StyledButton variant={'light'} block onClick={clickExportShopingList}>Eksportuj listę zakupów</StyledButton>\r\n                {\r\n                    fetchingInProgress\r\n                    &&\r\n                    <StyledButton variant={'warning'}\r\n                                  block\r\n                                  onClick={downloadExportData}\r\n                                  style={{marginTop: '20px'}}\r\n                                  disabled={exportData === null}>\r\n                        {exportData === null ? 'Pobieranie...' : 'Pobierz plik z danymi'}\r\n                    </StyledButton>\r\n                }\r\n            </Panel>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n","import CategoryBrowser from './views/CategoryBrowser'\r\nimport RecipeBrowser from './views/RecipeBrowser'\r\nimport RecipePreview from './views/RecipePreview'\r\nimport Cooking from './views/Cooking'\r\nimport RecipeEditor from './views/RecipeEditor'\r\nimport IngredientEditor from './views/IngredientEditor'\r\nimport StepEditor from './views/StepEditor'\r\nimport ShoppingList from './views/ShoppingList'\r\nimport Search from './views/Search'\r\nimport IngredientBrowser from './views/IngredientBrowser'\r\nimport ProfilePage from './views/ProfilePage'\r\n\r\nexport default [\r\n    { path: '/recipes', exact: true, name: 'Kategorie przepisów', component: CategoryBrowser },\r\n    { path: '/recipes/:category', exact: true, name: 'Przepisy', component: RecipeBrowser },\r\n    { path: '/recipes/:category/add', exact: true, name: 'Nowy przepis', component: RecipeEditor },\r\n    { path: '/recipes/:category/:recipe', exact: true, name: 'Podgląd przepisu', component: RecipePreview },\r\n    { path: '/recipes/:category/:recipe/cooking', exact: true, name: 'Tryb gotowania', component: Cooking },\r\n    { path: '/recipes/:category/:recipe/edit-recipe', exact: true, name: 'Edycja przepisu', component: RecipeEditor },\r\n    { path: '/recipes/:category/:recipe/edit-ingredients', exact: true, name: 'Edycja składników przepisu', component: IngredientEditor },\r\n    { path: '/recipes/:category/:recipe/edit-steps', exact: true, name: 'Edycja kroków przepisu', component: StepEditor },\r\n    { path: '/search', exact: true, name: 'Lista zakupów', component: Search },\r\n    { path: '/shoping-list', exact: true, name: 'Lista zakupów', component: ShoppingList },\r\n    { path: '/ingredients', exact: true, name: 'Składniki', component: IngredientBrowser },\r\n    { path: '/profile', exact: true, name: 'Profil', component: ProfilePage },\r\n]\r\n","import React, {useContext} from 'react'\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport LoginPage from './views/LoginPage'\nimport Layout from './components/Layout'\nimport routes from './routes'\nimport { UserContext } from './firebase/UserContext'\n\nconst PrivateRoute = () => {\n    const authorized = useContext(UserContext)\n\n    if(authorized) {\n        return (\n            <Layout>\n              <Switch>\n                {\n                  routes.map((route, idx) => (\n                      <Route key={idx}\n                             path={route.path}\n                             exact={route.exact}\n                             name={route.name}\n                             render={props => (\n                                 <route.component {...props} />\n                             )} />\n                  ))\n                }\n              </Switch>\n            </Layout>\n        )\n    }else{\n        return (\n            <Redirect to={'/'}/>\n        )\n    }\n}\n\nconst App = () => (\n    <HashRouter>\n      <React.Suspense fallback={() => <span>Loading...</span>}>\n        <Switch>\n          <Route exact path=\"/\" name=\"Login Page\" render={props => <LoginPage {...props} />} />\n          <PrivateRoute/>\n        </Switch>\n      </React.Suspense>\n    </HashRouter>\n)\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport UserProvider from './firebase/UserContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n        <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}